{
	"info": {
		"_postman_id": "40d2618f-4e8c-47aa-9a6c-683771da9b7c",
		"name": "AJAZA FINAL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "40153074",
		"_collection_link": "https://orensa64.postman.co/workspace/Team-Workspace~f6164667-2aff-4c53-834b-a1c73032dee9/collection/40153074-40d2618f-4e8c-47aa-9a6c-683771da9b7c?action=share&source=collection_link&creator=40153074"
	},
	"item": [
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"EngyAdvertiser\",\r\n    \"password\":\"12345\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "### Login API\n\nThis API endpoint is used to authenticate users and obtain access to the application.\n\n#### Request Body\n\n- username (string, required): The username of the user.\n    \n- password (string, required): The password of the user.\n    \n\n#### Response\n\nThe response of this request is a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"token\": {\n            \"type\": \"string\"\n        },\n        \"expiresIn\": {\n            \"type\": \"number\"\n        }\n    }\n}\n\n ```\n\nThe response contains a `token` which is a string representing the access token, and `expiresIn` which is a number indicating the expiration time of the token in seconds."
			},
			"response": []
		},
		{
			"name": "Search for a product by name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/product/search?name=Sample Product2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"search"
					],
					"query": [
						{
							"key": "name",
							"value": "Sample Product2"
						}
					]
				},
				"description": "### Product Search\n\nThis endpoint allows you to search for a product by name.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:7000/product/search`\n    \n- Query Parameters:\n    \n    - name (string, required): The name of the product to search for.\n        \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    // Define the properties of the response object here\n  }\n}\n\n ```\n\nThis endpoint makes an HTTP GET request to search for a product by name."
			},
			"response": []
		},
		{
			"name": "upcoming Activities",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/activity/upcomingActivities",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"activity",
						"upcomingActivities"
					]
				},
				"description": "### Get Upcoming Activities\n\nThis endpoint retrieves a list of upcoming activities.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/activity/upcomingActivities`\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n\nThe response will contain an array of upcoming activities, each with the following properties:\n\n- `transportation`: An object with `from` and `to` properties indicating transportation details.\n    \n- `isFlagged`: A boolean value indicating if the activity is flagged.\n    \n- `_id`: The unique identifier for the activity.\n    \n- `advertiserId`: The unique identifier of the advertiser.\n    \n- `name`: The name of the activity.\n    \n- `date`: The date of the activity.\n    \n- `location`: The location of the activity.\n    \n- `upper`: An integer value.\n    \n- `lower`: An integer value.\n    \n- `category`: An array of strings representing the category of the activity.\n    \n- `tags`: An array of strings representing tags associated with the activity.\n    \n- `isOpen`: A boolean value indicating if the activity is open.\n    \n- `feedback`: An array of objects containing `rating`, `comments`, and `_id` properties.\n    \n- `spots`: An integer value representing the available spots for the activity.\n    \n- `hidden`: A boolean value indicating if the activity is hidden.\n    \n- `__v`: A version key."
			},
			"response": []
		},
		{
			"name": "upcoming Itineraries",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/itinerary/upcomingItineraries",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"upcomingItineraries"
					]
				},
				"description": "### Get Upcoming Itineraries\n\nThis endpoint makes an HTTP GET request to retrieve the upcoming itineraries."
			},
			"response": []
		},
		{
			"name": "visible Venues",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/venue/visibleVenues",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"venue",
						"visibleVenues"
					]
				},
				"description": "### GET /venue/visibleVenues\n\nThis endpoint retrieves a list of visible venues.\n\n#### Request\n\nNo request body is required for this request.\n\n#### Response\n\nThe response will be a JSON array containing objects with the following properties:\n\n- `openingHours` (object): An object containing the opening hours for each day of the week.\n    \n- `price` (object): An object containing the pricing information for foreigners, natives, and students.\n    \n- `_id` (string): The unique identifier for the venue.\n    \n- `governorId` (string): The identifier of the governing authority for the venue.\n    \n- `name` (string): The name of the venue.\n    \n- `desc` (string): The description of the venue.\n    \n- `pictures` (array): An array of picture URLs associated with the venue.\n    \n- `location` (string): The location of the venue.\n    \n- `tags` (array): An array of tags associated with the venue.\n    \n- `isVisible` (boolean): Indicates whether the venue is visible or not.\n    \n- `__v` (number): Version key for the venue object.\n    \n\nThe response will have a status code of 200 and a Content-Type of application/json.\n\n#### JSON Schema\n\n``` json\n[\n  {\n    \"type\": \"object\",\n    \"properties\": {\n      \"openingHours\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"suno\": { \"type\": \"number\" },\n          \"sunc\": { \"type\": \"number\" },\n          \"mono\": { \"type\": \"number\" },\n          \"monc\": { \"type\": \"number\" },\n          \"tueo\": { \"type\": \"number\" },\n          \"tuec\": { \"type\": \"number\" },\n          \"wedo\": { \"type\": \"number\" },\n          \"wedc\": { \"type\": \"number\" },\n          \"thuo\": { \"type\": \"number\" },\n          \"thuc\": { \"type\": \"number\" },\n          \"frio\": { \"type\": \"number\" },\n          \"fric\": { \"type\": \"number\" },\n          \"sato\": { \"type\": \"number\" },\n          \"satc\": { \"type\": \"number\" }\n        }\n      },\n      \"price\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"foreigner\": { \"type\": \"number\" },\n          \"native\": { \"type\": \"number\" },\n          \"student\": { \"type\": \"number\" }\n        }\n      },\n      \"_id\": { \"type\": \"string\" },\n      \"governorId\": { \"type\": \"string\" },\n      \"name\": { \"type\": \"string\" },\n      \"desc\": { \"type\": \"string\" },\n      \"pictures\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n      \"location\": { \"type\": \"string\" },\n      \"tags\": { \"type\": \"array\", \"items\": { \"type\": \"string\" } },\n      \"isVisible\": { \"type\": \"boolean\" },\n      \"__v\": { \"type\": \"number\" }\n    }\n  }\n]\n\n ```"
			},
			"response": []
		},
		{
			"name": "update advertiser profile",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\"email\":\"orensaaaa@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/advertiser/advertiserUpdateProfile/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"advertiserUpdateProfile",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66ffd2844b9e6524d5499bba"
						}
					]
				},
				"description": "### Update Advertiser Profile\n\nThis endpoint is used to update the profile of an advertiser.\n\n#### Request\n\n- Method: PATCH\n    \n- URL: `http://localhost:5000/advertiser/advertiserUpdateProfile/:id`\n    \n- { \"email\": \"orensaaaa@gmail.com\"}\n    \n\n#### Response\n\n- Status: 200\n    \n- Content-Type: application/json\n    \n- { \"updatedAdvertiser\": { \"companyProfile\": { \"name\": \"\", \"desc\": \"\", \"location\": \"\" }, \"_id\": \"\", \"username\": \"\", \"email\": \"\", \"pass\": \"\", \"id\": \"\", \"taxationRegCard\": \"\", \"pending\": true, \"link\": \"\", \"hotline\": \"\", \"logo\": null, \"acceptedTerms\": true, \"notifications\": \\[ { \"text\": \"\", \"seen\": true, \"_id\": \"\" } \\], \"requestingDeletion\": true, \"__v\": 0 }, \"token\": \"\"}"
			},
			"response": []
		},
		{
			"name": "update guide profile",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"Orensa6464\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/guide/updateGuideProfile/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"updateGuideProfile",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66ffc68dfcb1063a36186ff9"
						}
					]
				},
				"description": "### Update Guide Profile\n\nThis endpoint is used to update the profile of a guide.\n\n#### Request Body\n\n- username (string, required): The new username for the guide.\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"updatedGuide\": {\n    \"_id\": \"\",\n    \"username\": \"\",\n    \"email\": \"\",\n    \"certificates\": [],\n    \"pending\": true,\n    \"previousWork\": [\"\"],\n    \"acceptedTerms\": true,\n    \"requestingDeletion\": true,\n    \"notifications\": [],\n    \"feedback\": [],\n    \"__v\": 0,\n    \"mobile\": \"\",\n    \"yearsOfExperience\": 0,\n    \"photo\": null\n  },\n  \"token\": \"\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "update tourist profile",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"requestingDeletion\":false,\r\n    \"activityBookings\":[]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "673204de1e3a60a3349359ff"
						}
					]
				},
				"description": "### PATCH /tourist/:id\n\nThis endpoint is used to update the details of a tourist.\n\n#### Request Body\n\n- requestingDeletion (boolean, required): Indicates whether the tourist is requesting deletion.\n    \n- activityBookings (array, required): Array of activity bookings.\n    \n\n#### Response\n\nThe response is in JSON format and represents the updated details of the tourist. Below is a JSON schema representing the response:\n\n``` json\n{\n  \"_id\": \"string\",\n  \"username\": \"string\",\n  \"email\": \"string\",\n  \"pass\": \"string\",\n  \"mobile\": \"string\",\n  \"nationality\": \"string\",\n  \"dob\": \"string\",\n  \"occupation\": \"string\",\n  \"wallet\": 0,\n  \"activityBookmarks\": [],\n  \"itineraryBookmarks\": [],\n  \"points\": 0,\n  \"totalPoints\": 0,\n  \"badge\": 0,\n  \"wishlist\": [],\n  \"usedPromoCodes\": [],\n  \"gaveFeedback\": [],\n  \"requestingDeletion\": true,\n  \"preferredTags\": [],\n  \"preferredCategories\": [\"\"],\n  \"joined\": \"string\",\n  \"activityBookings\": [],\n  \"itineraryBookings\": [\n    {\n      \"itineraryId\": \"string\",\n      \"date\": \"string\",\n      \"total\": 0,\n      \"_id\": \"string\"\n    }\n  ],\n  \"notifications\": [\n    {\n      \"text\": \"string\",\n      \"seen\": true,\n      \"activityId\": \"string\",\n      \"_id\": \"string\"\n    }\n  ],\n  \"cart\": [],\n  \"orders\": [],\n  \"deliveryAddresses\": [],\n  \"__v\": 0\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "update seller profile",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"OrensaSeller\",\r\n    \"name\":\"Orensaaaaa\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/seller/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "6700f4db21dd828e9f3a244b"
						}
					]
				},
				"description": "### PATCH /seller/:id\n\nThis endpoint is used to update the details of a specific seller.\n\n#### Request Body\n\n- The request body should be in JSON format and include the following parameters:\n    \n    - `username` (string): The updated username of the seller.\n        \n    - `name` (string): The updated name of the seller.\n        \n\n#### Response\n\nThe response will be in JSON format with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"updatedSeller\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"_id\": {\"type\": \"string\"},\n        \"username\": {\"type\": \"string\"},\n        \"email\": {\"type\": \"string\"},\n        \"acceptedTerms\": {\"type\": \"boolean\"},\n        \"pending\": {\"type\": \"boolean\"},\n        \"requestingDeletion\": {\"type\": \"boolean\"},\n        \"notifications\": {\"type\": \"array\"},\n        \"__v\": {\"type\": \"number\"},\n        \"name\": {\"type\": \"string\"}\n      }\n    },\n    \"token\": {\"type\": \"string\"}\n  }\n}\n\n ```\n\n- `updatedSeller`: Object containing the updated details of the seller including `_id`, `username`, `email`, `acceptedTerms`, `pending`, `requestingDeletion`, `notifications`, `__v`, and `name`.\n    \n- `token`: A string token."
			},
			"response": []
		},
		{
			"name": "change tourist password",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pass\":\"123456\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/changePassword/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"changePassword",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "67026c2bab5b236a8a9abd5a"
						}
					]
				},
				"description": "### Update Tourist Password\n\nThe `PATCH` request is used to update the password for a specific tourist identified by the `:id` parameter in the URL.\n\n### Request Body\n\nThe request body should be in JSON format and include the new password for the tourist.\n\n- pass: The new password for the tourist.\n    \n\n### Response\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "change guide password",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pass\":\"newpass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/guide/changePassword/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"changePassword",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66ffc68dfcb1063a36186ff9"
						}
					]
				},
				"description": "### PATCH /guide/changePassword/:id\n\nThis endpoint is used to change the password for a specific guide identified by the provided ID.\n\n#### Request Body\n\n- pass (string, required): The new password for the guide.\n    \n\n#### Response\n\nThe response for this request is a JSON schema. The schema includes the following properties:\n\n- status (string, required): The status of the response, indicating success or failure.\n    \n- message (string, required): A message providing additional information about the status."
			},
			"response": []
		},
		{
			"name": "change advertiser password",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pass\":\"testpass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/advertiser/changePassword/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"changePassword",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66f9438cd1367635e56ca39a"
						}
					]
				},
				"description": "# Change Advertiser Password\n\nThis endpoint is used to change the password of an advertiser.\n\n## Request\n\n- Method: PATCH\n    \n- URL: `http://localhost:5000/advertiser/changePassword/:id`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- Body:\n    \n    - pass (string, required): The new password for the advertiser.\n        \n\n## Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"message\": \"string\"\n}\n\n ```\n\nThe `message` field in the response indicates the status of the password change request."
			},
			"response": []
		},
		{
			"name": "change governor password",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pass\":\"engypass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/governor/changePassword/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"governor",
						"changePassword",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66f7f16f31b9e45ba815c639"
						}
					]
				},
				"description": "### Change Password for Governor\n\nThis endpoint is used to update the password for a specific governor.\n\n#### Request\n\n- Method: PATCH\n    \n- URL: `http://localhost:5000/governor/changePassword/:id`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- { \"pass\": \"engypass\"}"
			},
			"response": []
		},
		{
			"name": "change admin password",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pass\":\"newpass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/admin/changePassword/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"admin",
						"changePassword",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66f9b393838fb35760cf9057"
						}
					]
				},
				"description": "# Change Admin Password\n\nThis endpoint is used to change the password of an admin user.\n\n## Request\n\n- Method: PATCH\n    \n- URL: `http://localhost:5000/admin/changePassword/:id`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- Body:\n    \n    - pass (string, required): The new password for the admin user.\n        \n\n## Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"message\": \"string\"\n}\n\n ```\n\n- message (string): A message indicating the result of the password change operation."
			},
			"response": []
		},
		{
			"name": "change seller password",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"pass\":\"sellerpass\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/seller/changePassword/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"changePassword",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "670084dfe6317d13e99371af"
						}
					]
				},
				"description": "### Change Seller Password\n\nThis endpoint is used to change the password of a seller.\n\n#### Request\n\n- Method: `PATCH`\n    \n- URL: `http://localhost:5000/seller/changePassword/:id`\n    \n\n##### Request Body\n\n- Type: JSON\n    \n    - `pass` (string, required): The new password for the seller.\n        \n\n#### Response\n\nThe response of this request is a JSON object conforming to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "forgot password",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"omar.orensa319@gmail.com\",\r\n    \"role\":\"advertiser\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/forgot-password",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"forgot-password"
					]
				},
				"description": "### Forgot Password\n\nThe `Forgot Password` endpoint is used to initiate the process of resetting the user's password.\n\n#### Request Body\n\n- `email` (string) - The email address of the user for whom the password reset is requested.\n    \n- `role` (string) - The role of the user for whom the password reset is requested.\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"message\": \"Password reset instructions have been sent to the provided email address\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "verify-otp",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"omar.orensa319@gmail.com\",\r\n    \"otp\":\"330486\",\r\n    \"newPassword\":\"newpass\",\r\n    \"role\":\"advertiser\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/verify-otp",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"verify-otp"
					]
				},
				"description": "### Verify OTP and Update Password\n\nThis endpoint allows the user to verify the OTP (One-Time Password) sent to their email and update their password.\n\n#### Request Body\n\n- `email` (string): The email address of the user.\n    \n- `otp` (string): The One-Time Password to be verified.\n    \n- `newPassword` (string): The new password to be set.\n    \n- `role` (string): The role of the user.\n    \n\n#### Response\n\nThe response will be in JSON format and will include the following properties:\n\n- `success` (boolean): Indicates if the OTP verification and password update was successful.\n    \n- `message` (string): A message indicating the result of the verification and password update.\n    \n\n#### Example\n\n``` json\n{\n    \"success\": true,\n    \"message\": \"OTP verified and password updated successfully.\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "change password",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"oldPassword\":\"newpass\",\r\n    \"newPassword\":\"NewPass64\",\r\n    \"role\":\"advertiser\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/change-password/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"change-password",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "66ffd2844b9e6524d5499bba"
						}
					]
				},
				"description": "### Change Password\n\nThis endpoint allows the user to change their password by providing the old password and the new password along with the role.\n\n#### Request Body\n\n- oldPassword (string, required): The old password for authentication.\n    \n- newPassword (string, required): The new password to be set.\n    \n- role (string, required): The role of the user.\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Create advertiser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"adventure_ads\",\r\n  \"email\": \"ads@adventure.com\",\r\n  \"pass\": \"hashed_password_123\",\r\n  \"link\": \"https://adventure.com\",\r\n  \"hotline\": \"+1234567890\",\r\n  \"companyProfile\": {\r\n    \"name\": \"Adventure Advertisers\",\r\n    \"desc\": \"Advertisers for adventure activities\",\r\n    \"location\": \"New York, USA\"\r\n  },\r\n  \"acceptedTerms\": true,\r\n  \"pending\": false\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/advertiser/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						""
					]
				},
				"description": "### Add Advertiser\n\nThis endpoint is used to add a new advertiser to the system.\n\n#### Request Body\n\n- `username` (string): The username of the advertiser.\n    \n- `email` (string): The email of the advertiser.\n    \n- `pass` (string): The hashed password of the advertiser.\n    \n- `link` (string): The website link of the advertiser.\n    \n- `hotline` (string): The contact hotline of the advertiser.\n    \n- `companyProfile` (object): The profile information of the company.\n    \n    - `name` (string): The name of the company.\n        \n    - `desc` (string): Description of the company.\n        \n    - `location` (string): Location of the company.\n        \n- `acceptedTerms` (boolean): Indicates whether the terms have been accepted.\n    \n- `pending` (boolean): Indicates the pending status of the advertiser.\n    \n\n#### Response\n\nThe response will contain the status of the request, along with any relevant data or error messages."
			},
			"response": []
		},
		{
			"name": "Create activity",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"advertiserId\": \"67154c8eb4f7d248acdac1e3\",\r\n  \"name\": \"Skydiving Experience\",\r\n  \"date\": \"2024-10-25T10:00:00Z\",\r\n  \"location\": \"https://maps.google.com/?q=Skydiving+Venue\",\r\n  \"upper\": 10,\r\n  \"lower\": 5,\r\n  \"category\": [\"Adventure\", \"Extreme Sports\"],\r\n  \"tags\": [\"skydiving\", \"adrenaline\"],\r\n  \"isOpen\": true,\r\n  \"spots\": 20\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/activity/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"activity",
						""
					]
				},
				"description": "### Create Activity\n\nThis endpoint allows the creation of a new activity.\n\n#### Request Body\n\n- `advertiserId` (string): The ID of the advertiser.\n    \n- `name` (string): The name of the activity.\n    \n- `date` (string): The date and time of the activity.\n    \n- `location` (string): The location of the activity.\n    \n- `upper` (number): The upper limit of participants.\n    \n- `lower` (number): The lower limit of participants.\n    \n- `category` (array of strings): The category of the activity.\n    \n- `tags` (array of strings): Tags related to the activity.\n    \n- `isOpen` (boolean): Indicates if the activity is open for registration.\n    \n- `spots` (number): The total spots available for the activity.\n    \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"activityId\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Create guide",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"expert_guide\",\r\n  \"email\": \"guide@adventure.com\",\r\n  \"pass\": \"hashed_password_guide\",\r\n  \"yearsOfExperience\": 5,\r\n  \"previousWork\": [\"Tour Guide at XYZ Tours\", \"Mountain Guide at Peak Tours\"],\r\n  \"acceptedTerms\": true,\r\n  \"pending\": false\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/guide/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						""
					]
				},
				"description": "### Add Guide\n\nThis endpoint allows you to add a new guide to the adventure platform.\n\n#### Request Body\n\n- `username` (string): The username of the guide.\n    \n- `email` (string): The email address of the guide.\n    \n- `pass` (string): The hashed password of the guide.\n    \n- `yearsOfExperience` (number): The number of years of experience the guide has.\n    \n- `previousWork` (array of strings): The previous work experience of the guide.\n    \n- `acceptedTerms` (boolean): Indicates whether the guide has accepted the terms.\n    \n- `pending` (boolean): Indicates whether the guide is pending approval.\n    \n\n#### Response\n\nThe response will contain the status of the guide addition operation."
			},
			"response": []
		},
		{
			"name": "Create itinerary",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"guideId\": \"67154d39b4f7d248acdac1e7\",\r\n  \"name\": \"Adventure Day\",\r\n  \"timeline\": [\r\n    {\r\n      \"start\": 9,\r\n      \"id\": \"6523c4e5f7e58a00176b234b\",\r\n      \"type\": \"Activity\",\r\n      \"duration\": 2\r\n    }\r\n  ],\r\n  \"language\": \"English\",\r\n  \"price\": 150,\r\n  \"availableDateTime\": [\r\n    {\r\n      \"date\": \"2024-10-25T09:00:00Z\",\r\n      \"spots\": 20\r\n    }\r\n  ],\r\n  \"pickUp\": \"City Center\",\r\n  \"dropOff\": \"Same Location\",\r\n  \"maxTourists\": 20\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/itinerary/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						""
					]
				},
				"description": "### Create New Itinerary\n\nThis endpoint allows the user to create a new itinerary for a guided tour.\n\n#### Request Body\n\n- `guideId` (string): The unique identifier of the guide.\n    \n- `name` (string): The name of the itinerary.\n    \n- `timeline` (array): An array of objects containing details about the timeline of the itinerary.\n    \n    - `start` (integer): The start time of the activity.\n        \n    - `id` (string): The unique identifier of the activity.\n        \n    - `type` (string): The type of the activity.\n        \n    - `duration` (integer): The duration of the activity.\n        \n- `language` (string): The language in which the tour will be conducted.\n    \n- `price` (number): The price of the itinerary.\n    \n- `availableDateTime` (array): An array of objects containing available date and time slots.\n    \n    - `date` (string): The date and time of availability.\n        \n    - `spots` (integer): The number of available spots.\n        \n- `pickUp` (string): The pick-up location for the tour.\n    \n- `dropOff` (string): The drop-off location for the tour.\n    \n- `maxTourists` (integer): The maximum number of tourists allowed on the tour.\n    \n\n#### Response Body\n\nThe response will contain the details of the newly created itinerary, including its unique identifier and other relevant information."
			},
			"response": []
		},
		{
			"name": "Create tourist",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"CBUM\",\r\n  \"email\": \"cbum@example.com\",\r\n  \"pass\": \"hashed_password_john\",\r\n  \"mobile\": \"+19876543210\",\r\n  \"nationality\": \"USA\",\r\n  \"dob\": \"1990-05-15T00:00:00Z\",\r\n  \"occupation\": \"Software Developer\",\r\n  \"wallet\": 200,\r\n  \"activityBookings\": [\r\n    {\r\n      \"activityId\": \"67154cfeb4f7d248acdac1e5\",\r\n      \"total\": 1\r\n    }\r\n  ],\r\n  \"itineraryBookings\": [\r\n    {\r\n      \"itineraryId\": \"67154d93b4f7d248acdac1e9\",\r\n      \"date\": \"2023-10-25T09:00:00Z\",\r\n      \"total\": 150\r\n    }\r\n  ],\r\n  \"points\": 10,\r\n  \"totalPoints\": 10,\r\n  \"badge\": 1\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						""
					]
				},
				"description": "# Create a new tourist\n\nThis endpoint allows you to create a new tourist with the provided details.\n\n## Request Body\n\n- `username` (string): The username of the tourist.\n    \n- `email` (string): The email address of the tourist.\n    \n- `pass` (string): The hashed password of the tourist.\n    \n- `mobile` (string): The mobile number of the tourist.\n    \n- `nationality` (string): The nationality of the tourist.\n    \n- `dob` (string): The date of birth of the tourist.\n    \n- `occupation` (string): The occupation of the tourist.\n    \n- `wallet` (number): The wallet balance of the tourist.\n    \n- `activityBookings` (array): An array of activity bookings containing activityId (string) and total (number) for each booking.\n    \n- `itineraryBookings` (array): An array of itinerary bookings containing itineraryId (string), date (string), and total (number) for each booking.\n    \n- `points` (number): The points earned by the tourist.\n    \n- `totalPoints` (number): The total points accumulated by the tourist.\n    \n- `badge` (number): The badge level of the tourist.\n    \n\n## Response\n\nThe response will contain the details of the newly created tourist."
			},
			"response": []
		},
		{
			"name": "req delete tourist",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/tourist/requestDeletion/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"requestDeletion",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "67154e0ab4f7d248acdac1ed"
						}
					]
				},
				"description": "### Request Description\n\nThis endpoint is used to send a PATCH request to request the deletion of a specific tourist record identified by the provided ID.\n\n### Request Body\n\n- No request body is required for this endpoint.\n    \n\n### Response\n\nThe response will be a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\",\n      \"description\": \"Indicates the status of the request.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"Provides a message regarding the deletion request.\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "req delete guide",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/guide/requestDeletion/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"requestDeletion",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "67154d39b4f7d248acdac1e7"
						}
					]
				},
				"description": "# Guide Request Deletion\n\nThis endpoint allows the user to request the deletion of a specific guide.\n\n## Request\n\n### Request Parameters\n\n- `id` (path parameter) : The unique identifier of the guide to be deleted.\n    \n\n### Request Body\n\nThis request does not require a request body.\n\n## Response\n\nThe response of this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- `status` (string) : The status of the deletion request.\n    \n- `message` (string) : A message indicating the result of the deletion request."
			},
			"response": []
		},
		{
			"name": "req delete advertiser",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/advertiser/requestDeletion/:id",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"requestDeletion",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "67154c8eb4f7d248acdac1e3"
						}
					]
				},
				"description": "The HTTP PATCH request is used to update the status of a specific advertiser deletion request identified by the provided ID.\n\n### Request Parameters\n\n- `id` (path parameter): The unique identifier of the advertiser deletion request.\n    \n\n### Response\n\nThe response of this request is a JSON schema representing the updated advertiser deletion request. The schema includes the properties and data types of the response object.\n\nExample JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"updated_at\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "add to wishlist",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"touristId\":\"67154e0ab4f7d248acdac1ed\",\r\n    \"productId\":\"670087792e88a041a4ea9e8e\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/add-to-wishlist",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"add-to-wishlist"
					]
				},
				"description": "### Add Product to Tourist's Wishlist\n\nThis endpoint allows the addition of a product to a tourist's wishlist.\n\n#### Request Body\n\n- `touristId` (string) - The ID of the tourist.\n    \n- `productId` (string) - The ID of the product to be added to the wishlist.\n    \n\n#### Response\n\nThe response is a JSON object with the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- `status` (string) - Indicates the status of the request, whether it was successful or not.\n    \n- `message` (string) - Provides a message related to the status of the request."
			},
			"response": []
		},
		{
			"name": "view wishlist",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/tourist/wishlist/:touristId",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"wishlist",
						":touristId"
					],
					"variable": [
						{
							"key": "touristId",
							"value": "67154e0ab4f7d248acdac1ed"
						}
					]
				},
				"description": "### Get Tourist Wishlist\n\nThis endpoint retrieves the wishlist of a tourist based on the provided tourist ID.\n\n#### Request\n\n- Method: `GET`\n    \n- URL: `http://localhost:5000/tourist/wishlist/:touristId`\n    \n- Path Variable\n    \n    - `touristId` (string, required): The ID of the tourist for whom the wishlist is to be retrieved.\n        \n\n#### Response\n\nThe response for this request is a JSON object representing the wishlist of the tourist. The schema for the response can be described as follows:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"wishlistItems\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"itemId\": {\n                        \"type\": \"string\"\n                    },\n                    \"itemName\": {\n                        \"type\": \"string\"\n                    },\n                    \"itemCategory\": {\n                        \"type\": \"string\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "remove from wishlist",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				},
				"description": "### Retrieve Data Endpoint\n\nThis endpoint makes an HTTP GET request to retrieve data from the server.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response of this request is a JSON object conforming to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"key1\": {\n            \"type\": \"string\"\n        },\n        \"key2\": {\n            \"type\": \"number\"\n        },\n        ...\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "item from wishlist to cart",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"touristId\":\"67154e0ab4f7d248acdac1ed\",\r\n    \"productId\":\"670087792e88a041a4ea9e8e\",\r\n    \"quantity\":\"5\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/add-to-cart-from-wishlist",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"add-to-cart-from-wishlist"
					]
				},
				"description": "This endpoint allows a tourist to add a product to their cart from the wishlist. The request should be sent as an HTTP POST to the specified URL.\n\n### Request Body\n\n- `touristId` (string): The ID of the tourist.\n    \n- `productId` (string): The ID of the product to be added to the cart.\n    \n- `quantity` (string): The quantity of the product to be added to the cart.\n    \n\n### Response\n\nThe response of this request is a JSON schema. The specific structure of the response will depend on the server implementation and the success or failure of the request."
			},
			"response": []
		},
		{
			"name": "add delivery address",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"touristId\": \"67154e0ab4f7d248acdac1ed\",\r\n  \"address\": {\r\n    \"country\": \"USA\",\r\n    \"city\": \"New York\",\r\n    \"area\": \"Area\",\r\n    \"street\": \"Street\",\r\n    \"house\": 6464,\r\n    \"app\": 6464,\r\n    \"desc\": \"Description\"\r\n  }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/add-delivery-address",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"add-delivery-address"
					]
				},
				"description": "### Add Delivery Address\n\nThis endpoint allows the addition of a delivery address for a tourist.\n\n#### Request Body\n\n- `touristId` (string) - The ID of the tourist.\n    \n- `address` (object) - The address details.\n    \n    - `country` (string) - The country of the address.\n        \n    - `city` (string) - The city of the address.\n        \n    - `area` (string) - The area of the address.\n        \n    - `street` (string) - The street of the address.\n        \n    - `house` (number) - The house number of the address.\n        \n    - `app` (number) - The apartment number of the address.\n        \n    - `desc` (string) - Description of the address.\n        \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "generate jwt token",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"role\":\"tourist\",\r\n    \"id\":\"673204de1e3a60a3349359ff\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/api/auth/generate-token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"auth",
						"generate-token"
					]
				},
				"description": "### Request\n\nThis endpoint makes an HTTP GET request to retrieve a token for authentication. The request body should be sent in a raw format with the following payload:\n\n``` json\n{\n    \"role\": \"tourist\",\n    \"id\": \"673204de1e3a60a3349359ff\"\n}\n\n ```\n\n### Response\n\nThe response of this request can be documented as a JWT Token in the form of JSON schema."
			},
			"response": []
		},
		{
			"name": "Booking  Itinerary",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"Wallet\": true,\r\n  \"total\": 10,\r\n  \"date\": \"2025-11-04\",\r\n  \"promoCode\": null \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/670263407ac56ed6f1a71852/activity/6728b64ef6178149ff756ef6/book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"670263407ac56ed6f1a71852",
						"activity",
						"6728b64ef6178149ff756ef6",
						"book"
					]
				},
				"description": "### POST /tourist/670263407ac56ed6f1a71852/activity/6728b64ef6178149ff756ef6/book\n\nThis endpoint is used to book an activity for a tourist.\n\n#### Request Body\n\n- `Wallet` (boolean) - Indicates whether the payment is made using the wallet.\n    \n- `total` (number) - The total amount for the booking.\n    \n- `date` (string) - The date for the booking in the format \"YYYY-MM-DD\".\n    \n- `promoCode` (string, optional) - The promotional code, if available.\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"bookingId\": {\n      \"type\": \"string\"\n    },\n    \"confirmation\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response contains the `bookingId` and `confirmation` details for the booking."
			},
			"response": []
		},
		{
			"name": "Booking  Activity",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n{\r\n  \"Wallet\": true,\r\n  \"total\": 5,\r\n  \"date\": \"2025-11-04\",\r\n  \"promoCode\": null \r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/670263407ac56ed6f1a71852/activity/6728b64ef6178149ff756ef6/book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"670263407ac56ed6f1a71852",
						"activity",
						"6728b64ef6178149ff756ef6",
						"book"
					]
				},
				"description": "This API endpoint is a POST request to book an activity for a tourist. The request should be sent to [http://localhost:5000/tourist/670263407ac56ed6f1a71852/activity/6728b64ef6178149ff756ef6/book](http://localhost:5000/tourist/670263407ac56ed6f1a71852/activity/6728b64ef6178149ff756ef6/book).\n\n### Request Body\n\nThe request body should be sent in raw format and include the following parameters:\n\n- `Wallet` (boolean): Indicates if the payment is made using the wallet.\n    \n- `total` (integer): The total amount for the booking.\n    \n- `date` (string): The date for the activity booking in the format 'YYYY-MM-DD'.\n    \n- `promoCode` (string): The promotional code for availing any discounts. It can be null if not applicable.\n    \n\n### Response\n\nThe response to this request will contain the confirmation details of the booked activity. The specific structure of the response will depend on the server implementation."
			},
			"response": []
		},
		{
			"name": "Test users count",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/tourist/countByMonth?date=2024-11-1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"countByMonth"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-11-1"
						}
					]
				},
				"description": "### Get Tourist Count by Month\n\nThis endpoint retrieves the count of tourists for a specific month.\n\n#### Request\n\n- Method: GET\n    \n- Endpoint: `localhost:5000/tourist/countByMonth`\n    \n- Query Parameters:\n    \n    - date (string, required): The date for which the tourist count is to be retrieved in the format 'YYYY-MM-DD'.\n        \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"month\": \"string\",\n  \"count\": \"number\"\n}\n\n ```\n\n- `month`: The month for which the tourist count is retrieved.\n    \n- `count`: The count of tourists for the specified month."
			},
			"response": []
		},
		{
			"name": "Update Itinerary Filtered Fields",
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"timeline\" : [{\r\n        \"start\": \"2\",\r\n        \"id\": \"67040b3a55c52a15c9f8dabc\",\r\n        \"type\": \"Activity\",\r\n        \"duration\": \"23\"\r\n   }]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/itinerary/updateItineraryFilteredFields/67011cb87007512e20612266/670436d697f4a21f405ee1e4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"updateItineraryFilteredFields",
						"67011cb87007512e20612266",
						"670436d697f4a21f405ee1e4"
					]
				},
				"description": "# Update Itinerary Filtered Fields\n\nThis endpoint allows the user to update specific fields of an itinerary.\n\n## Request\n\n### Request URL\n\n- Method: `PATCH`\n    \n- URL: `http://localhost:5000/itinerary/updateItineraryFilteredFields/67011cb87007512e20612266/670436d697f4a21f405ee1e4`\n    \n\n### Request Body\n\n- Type: JSON\n    \n- Description: The request body should contain an array of timeline objects with updated fields.\n    \n    - `timeline` (array of objects)\n        \n        - `start` (string): The updated start time of the activity.\n            \n        - `id` (string): The unique identifier of the activity.\n            \n        - `type` (string): The type of the activity.\n            \n        - `duration` (string): The updated duration of the activity."
			},
			"response": []
		},
		{
			"name": "Creating category",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"category\": \"kefaya\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/category",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"category"
					]
				},
				"description": "# Create Category\n\nThis endpoint is used to create a new category.\n\n## Request\n\n- Method: POST\n    \n- URL: `http://localhost:5000/category`\n    \n- Body:\n    \n    - category (string, required): The name of the category to be created.\n        \n\nExample:\n\n``` json\n{\n    \"category\": \"kefaya\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Creating Tag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"tag\": \"alo\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tag",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tag"
					]
				},
				"description": "### POST /tag\n\nThis endpoint is used to create a new tag.\n\n#### Request Body\n\n- tag (string, required): The tag to be created.\n    \n\nExample:\n\n``` json\n{\n  \"tag\": \"alo\"\n}\n\n ```\n\n#### Response\n\nThe response for this request is a JSON object following the schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete Governor Venue",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"governorId\": \"66feef189f16718a3087d1b0\"\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/governor/deleteGovernorVenue/66feef579f16718a3087d1b2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"governor",
						"deleteGovernorVenue",
						"66feef579f16718a3087d1b2"
					]
				},
				"description": "### Delete Governor Venue\n\nThis endpoint is used to delete a specific governor venue.\n\n#### Request Body\n\n- governorId (string, required): The ID of the governor to be deleted.\n    \n\n#### Response\n\nThe response will not contain any data, only a status code indicating the success or failure of the delete operation."
			},
			"response": []
		},
		{
			"name": "Venues related to governer ID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"governorId\": \"66feef189f16718a3087d1b0\", \r\n  \"name\": \"Suns1et Park\",\r\n  \"desc\": \"A beautiful park with stunning sunset views.\",\r\n  \"location\": \"123 Park Avenue, Springfield\",\r\n  \"openingHours\": {\r\n    \"monc\": 8,\r\n    \"mono\": 18,\r\n    \"tuec\": 8,\r\n    \"tueo\": 18,\r\n    \"wedc\": 8,\r\n    \"wedo\": 18,\r\n    \"thuc\": 8,\r\n    \"thuo\": 18,\r\n    \"fric\": 8,\r\n    \"frio\": 18,\r\n    \"satc\": 9,\r\n    \"sato\": 17,\r\n    \"sunc\": 10,\r\n    \"suno\": 16\r\n  },\r\n  \"price\": {\r\n    \"foreigner\": 25.0,\r\n    \"native\": 15.0,\r\n    \"student\": 10.5\r\n  },\r\n  \"tags\": [\"Monuments\", \"Museums\"],\r\n  \"isVisible\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/governor/getMyVenues/66feef189f16718a3087d1b0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"governor",
						"getMyVenues",
						"66feef189f16718a3087d1b0"
					]
				},
				"description": "This API endpoint makes an HTTP GET request to retrieve the venues associated with the specified governor ID. The request URL is [http://localhost:5000/governor/getMyVenues/66feef189f16718a3087d1b0](http://localhost:5000/governor/getMyVenues/66feef189f16718a3087d1b0).\n\n### Request\n\nThe request does not contain a request body as it is a GET request. The governor ID \"66feef189f16718a3087d1b0\" is provided as a path parameter in the URL.\n\n### Response\n\nThe response will include detailed information about the venues associated with the governor ID, including the name, description, location, opening hours, price details, tags, and visibility status. The format of the response will be in JSON."
			},
			"response": []
		},
		{
			"name": "Create governer venues",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"governorId\": \"66feef189f16718a3087d1b0\", \r\n  \"name\": \"Suns1et Park\",\r\n  \"desc\": \"A beautiful park with stunning sunset views.\",\r\n  \"location\": \"123 Park Avenue, Springfield\",\r\n  \"openingHours\": {\r\n    \"monc\": 8,\r\n    \"mono\": 18,\r\n    \"tuec\": 8,\r\n    \"tueo\": 18,\r\n    \"wedc\": 8,\r\n    \"wedo\": 18,\r\n    \"thuc\": 8,\r\n    \"thuo\": 18,\r\n    \"fric\": 8,\r\n    \"frio\": 18,\r\n    \"satc\": 9,\r\n    \"sato\": 17,\r\n    \"sunc\": 10,\r\n    \"suno\": 16\r\n  },\r\n  \"price\": {\r\n    \"foreigner\": 25.0,\r\n    \"native\": 15.0,\r\n    \"student\": 10.5\r\n  },\r\n  \"tags\": [\"Monuments\", \"Museums\"],\r\n  \"isVisible\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/governor/createGovernorVenue",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"governor",
						"createGovernorVenue"
					]
				},
				"description": "This HTTP POST request is used to create a new governor venue. The request body should be sent in JSON format and include the following parameters:\n\n- `governorId`: The unique identifier of the governor associated with the venue.\n    \n- `name`: The name of the venue.\n    \n- `desc`: A description of the venue.\n    \n- `location`: The address or location of the venue.\n    \n- `openingHours`: An object containing the opening and closing hours for each day of the week.\n    \n- `price`: An object containing the pricing information for different visitor categories.\n    \n- `tags`: An array of tags or categories associated with the venue.\n    \n- `isVisible`: A boolean value indicating whether the venue is visible or not.\n    \n\nThe response to this request will include the details of the newly created governor venue."
			},
			"response": []
		},
		{
			"name": "Create Governor",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"governor1\",\r\n    \"pass\": \"pass12\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/governor/createGov",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"governor",
						"createGov"
					]
				},
				"description": "# Create Governor\n\nThis endpoint allows the creation of a new governor.\n\n## Request\n\n- Method: POST\n    \n- URL: `http://localhost:5000/governor/createGov`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- { \"username\": \"governor1\", \"pass\": \"pass12\" }\n    \n\n## Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Activities by Advertiser ID",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/activity/readActivities/?advertiserId=66fc2e3f80fc260d9af895d0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"activity",
						"readActivities",
						""
					],
					"query": [
						{
							"key": "advertiserId",
							"value": "66fc2e3f80fc260d9af895d0"
						}
					]
				},
				"description": "### Get Activities by Advertiser ID\n\nThis endpoint makes an HTTP GET request to retrieve activities based on the provided advertiser ID.\n\n#### Request Parameters\n\n- `advertiserId` (query parameter): The ID of the advertiser for which activities are to be retrieved.\n    \n\n#### Response\n\nThe response will include the details of the activities associated with the provided advertiser ID."
			},
			"response": []
		},
		{
			"name": "Create Specified Activity",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\r\n    \"advertiserId\": \"63f1a2b2e5a1f81b9f6c0e23\",\r\n    \"name\": \"Exciting Adventure Tour\",\r\n    \"date\": \"2024-12-15\",\r\n    \"upper\": 100,\r\n    \"lower\": 50,\r\n    \"location\": \"Grand Canyon\",\r\n    \"price\": 75,\r\n    \"category\": [\"Adventure\", \"Outdoor\"],\r\n    \"tags\": [\"hiking\", \"sightseeing\"],\r\n    \"discounts\": [10, 15],\r\n    \"isOpen\": true,\r\n    \"spots\": 20\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:4000/activity/createSpecifiedActivity\n",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"activity",
						"createSpecifiedActivity\n"
					]
				},
				"description": "### Create Specified Activity\n\nThis endpoint allows the creation of a specified activity.\n\n#### Request Body\n\n- `advertiserId` (string) - The ID of the advertiser.\n    \n- `name` (string) - The name of the activity.\n    \n- `date` (string) - The date of the activity.\n    \n- `upper` (number) - The upper limit.\n    \n- `lower` (number) - The lower limit.\n    \n- `location` (string) - The location of the activity.\n    \n- `price` (number) - The price of the activity.\n    \n- `category` (array) - The category of the activity.\n    \n- `tags` (array) - The tags related to the activity.\n    \n- `discounts` (array) - The discounts available for the activity.\n    \n- `isOpen` (boolean) - Indicates if the activity is open.\n    \n- `spots` (number) - The available spots for the activity.\n    \n\n#### Response (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"activityId\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Create  admin",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"EngyAdminFeb\",\r\n    \"pass\": \"12345\",\r\n    \"notifications\": [\r\n        {\r\n            \"text\": \"Welcome to the admin panel!\",\r\n            \"seen\": false\r\n        }\r\n    ],\r\n        \"date\": \"2024-05-27T16:20:15.872Z\"\r\n\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/admin",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"admin"
					]
				},
				"description": "### Admin POST Request\n\nThis endpoint allows the admin to submit user credentials and notifications.\n\n#### Request Body\n\n- `username` (string) - The username of the admin.\n    \n- `pass` (string) - The password of the admin.\n    \n- `notifications` (array) - An array of notifications containing:\n    \n    - `text` (string) - The content of the notification.\n        \n    - `seen` (boolean) - Indicates whether the notification has been seen.\n        \n- `date` (string) - The date and time of the request.\n    \n\n#### Response\n\nThe response is a JSON schema that represents the structure of the response data. It includes the properties and data types of the response fields."
			},
			"response": []
		},
		{
			"name": "get all admins",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/admin",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"admin"
					]
				},
				"description": "This endpoint makes an HTTP GET request to localhost:5000/admin. The response of this request is documented as a JSON schema."
			},
			"response": []
		},
		{
			"name": "create seller",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"EngySellerOctober\",\r\n  \"email\": \"Engyseller1@example.com\",\r\n  \"pass\": \"12345\", // Use a hashed password in production\r\n  \"id\": \"642b0c11c84215c3e470b9a1\", // Replace with an actual ObjectId\r\n  \"taxationRegCard\": \"642b0c11c84215c3e470b9a2\", // Replace with an actual ObjectId\r\n  \"name\": \"Engy\",\r\n  \"desc\": \"nggg\",\r\n      \"date\": \"2024-10-27T16:07:53.025Z\"\r\n\r\n}\r\n/*\r\n{\r\n    \"username\": \"sellernoitaxregcard\",\r\n    \"email\": \"testsellier2@example.com\",\r\n    \"pass\": \"hashedpassword123\",\r\n    \"id\": \"603c9b317fe76a19d8f2f10b\",\r\n    //\"taxationRegCard\": \"603c9b317fe76a19d8f2f10c\",\r\n    \"name\": \"Test Seller\",\r\n    \"desc\": \"A description of the seller's business.\",\r\n    \"logo\": \"603c9b317fe76a19d8f2f10d\",\r\n    \"acceptedTerms\": true,\r\n    \"notifications\": [\r\n        {\r\n            \"text\": \"New product update\",\r\n            \"seen\": false,\r\n            \"productId\": 123\r\n        }\r\n    ],\r\n    \"requestingDeletion\": true\r\n}*/\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/seller",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller"
					]
				},
				"description": "### Add Seller Information\n\nThis endpoint allows you to add seller information to the database. The request should be sent as an HTTP POST to `localhost:5000/seller`.\n\n#### Request Body\n\n- `username` (string): The username of the seller.\n    \n- `email` (string): The email address of the seller.\n    \n- `pass` (string): The password of the seller (should be hashed in production).\n    \n- `id` (string): The unique identifier of the seller (replace with an actual ObjectId).\n    \n- `taxationRegCard` (string): The taxation registration card of the seller (replace with an actual ObjectId).\n    \n- `name` (string): The name of the seller.\n    \n- `desc` (string): A description of the seller's business.\n    \n- `date` (string): The date of the seller's registration.\n    \n\n#### Response Body\n\n- `username` (string): The username of the seller.\n    \n- `email` (string): The email address of the seller.\n    \n- `pass` (string): The hashed password of the seller.\n    \n- `id` (string): The unique identifier of the seller.\n    \n- `name` (string): The name of the seller.\n    \n- `desc` (string): A description of the seller's business.\n    \n- `logo` (string): The logo of the seller.\n    \n- `acceptedTerms` (boolean): Indicates whether the seller has accepted the terms.\n    \n- `notifications` (array): An array of notifications for the seller, including text, seen status, and product ID.\n    \n- `requestingDeletion` (boolean): Indicates whether the seller is requesting deletion."
			},
			"response": []
		},
		{
			"name": "get all sellers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller"
					]
				},
				"description": "### Retrieve Seller Information\n\nThis endpoint allows you to retrieve seller information.\n\n#### Request\n\n- Method: GET\n    \n- Endpoint: `localhost:5000/seller`\n    \n\n#### Response\n\nThe response for this request can be described using the following JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"sellerId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"type\": \"string\"\n    },\n    \"phone\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Create advertiser",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"EngyAdvertiserOvtober3\",\r\n  \"email\": \"EngyadvertiserOct3@example.com\",\r\n  \"pass\": \"12345\",\r\n  \"id\": \"642b0c11c84215c3e470b9a1\",\r\n  \"taxationRegCard\": \"642b0c11c84215c3e470b9a2\",\r\n  \"link\": \"http://engy.com\",\r\n  \"hotline\": \"123456789\",\r\n  \"companyProfile\": {\r\n    \"name\": \"Sample Company\",\r\n    \"desc\": \"Sample Description\",\r\n    \"location\": \"Sample Location\"\r\n  },\r\n  \"acceptedTerms\": true,\r\n  \"date\": \"2023-10-15T00:00:00.000Z\" // Ensure the date is in October\r\n}\r\n\r\n/*\r\n\r\n{\r\n  \"username\": \"AAAAAaA4AAAAA\",\r\n  \"email\": \"AAAAaAAAAA4@example.com\",\r\n  \"pass\": \"hashedpassword123\",\r\n  \"id\": \"64f3a8bf874e0e9d080f1c31\",  // replace with a valid ObjectId\r\n  \"taxationRegCard\": \"64f3a8bf874e0e9d080f1c31\", // replace with a valid ObjectId\r\n  \"link\": \"http://example.com\",\r\n  \"hotline\": \"123-456-7890\",\r\n  \"companyProfile\": {\r\n    \"name\": \"Sample Company\",\r\n    \"desc\": \"This is a sample advertiser\",\r\n    \"location\": \"Rome, Italy\"\r\n  },\r\n  \"logo\": \"64f3a8bf874e0e9d080f1c31\", // replace with a valid ObjectId\r\n  \"acceptedTerms\": true,\r\n  \"requestingDeletion\": true\r\n}\r\n/*\r\n{\r\n  \"username\": \"AdvertisertestDocs2222\",\r\n  \"email\": \"AAAAaAAAAAj4@example.com\",\r\n  \"pass\": \"hashedpassword123\",\r\n  \"id\": \"64f3a8bf874e0e9d080f1c31\",  // replace with a valid ObjectId\r\n  //\"taxationRegCard\": \"64f3a8bf874e0e9d080f1c31\", // replace with a valid ObjectId\r\n  \"link\": \"http://example.com\",\r\n  \"hotline\": \"123-456-7890\",\r\n  \"companyProfile\": {\r\n    \"name\": \"Sample Company\",\r\n    \"desc\": \"This is a sample advertiser\",\r\n    \"location\": \"Rome, Italy\"\r\n  },\r\n  \"logo\": \"64f3a8bf874e0e9d080f1c31\", // replace with a valid ObjectId\r\n  \"acceptedTerms\": true,\r\n  \"requestingDeletion\": true\r\n}*/\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/advertiser",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser"
					]
				},
				"description": "### Advertiser Registration\n\nThis endpoint allows users to register as advertisers by providing their details.\n\n#### Request Body\n\n- `username` (string): The username of the advertiser.\n    \n- `email` (string): The email address of the advertiser.\n    \n- `pass` (string): The password for the advertiser's account.\n    \n- `id` (string): The unique identifier for the advertiser.\n    \n- `taxationRegCard` (string): The taxation registration card of the advertiser.\n    \n- `link` (string): The website link of the advertiser.\n    \n- `hotline` (string): The contact hotline of the advertiser.\n    \n- `companyProfile` (object): Details about the advertiser's company.\n    \n    - `name` (string): The name of the company.\n        \n    - `desc` (string): A brief description of the company.\n        \n    - `location` (string): The location of the company.\n        \n- `acceptedTerms` (boolean): Indicates whether the advertiser has accepted the terms and conditions.\n    \n- `date` (string): The date of registration.\n    \n\n#### Response Body (JSON Schema)\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": { \"type\": \"string\" },\n    \"message\": { \"type\": \"string\" },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"username\": { \"type\": \"string\" },\n        \"email\": { \"type\": \"string\" },\n        \"id\": { \"type\": \"string\" },\n        \"taxationRegCard\": { \"type\": \"string\" },\n        \"link\": { \"type\": \"string\" },\n        \"hotline\": { \"type\": \"string\" },\n        \"companyProfile\": {\n          \"type\": \"object\",\n          \"properties\": {\n            \"name\": { \"type\": \"string\" },\n            \"desc\": { \"type\": \"string\" },\n            \"location\": { \"type\": \"string\" }\n          }\n        },\n        \"acceptedTerms\": { \"type\": \"boolean\" }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "get all advertisers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/advertiser",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser"
					]
				},
				"description": "### GET /advertiser\n\nThis endpoint retrieves advertiser information.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be a JSON object with the following properties:\n\n- `advertiserId` (string): The unique identifier for the advertiser.\n    \n- `name` (string): The name of the advertiser.\n    \n- `email` (string): The email address of the advertiser.\n    \n- `phone` (string): The phone number of the advertiser.\n    \n- `address` (string): The address of the advertiser.\n    \n\nExample response:\n\n``` json\n{\n  \"advertiserId\": \"12345\",\n  \"name\": \"Advertiser Name\",\n  \"email\": \"advertiser@example.com\",\n  \"phone\": \"123-456-7890\",\n  \"address\": \"123 Advertiser St, City, Country\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "get all governors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/governor",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"governor"
					]
				},
				"description": "### Get Governor\n\nThis endpoint retrieves the details of a governor.\n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"id\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"state\": {\n      \"type\": \"string\"\n    },\n    \"term_start\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"term_end\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "get all tourists",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/tourist",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist"
					]
				},
				"description": "### Get Tourist Information\n\nThis endpoint retrieves tourist information.\n\n#### Request\n\n- Method: GET\n    \n- Endpoint: `localhost:5000/tourist`\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"touristId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"country\": {\n      \"type\": \"string\"\n    },\n    \"age\": {\n      \"type\": \"integer\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "get all guides",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/guide",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide"
					]
				},
				"description": "### Get Guide\n\nThis endpoint makes an HTTP GET request to localhost:5000/guide to retrieve the guide information.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response Body\n\n- `guideId`: The unique identifier for the guide.\n    \n- `title`: The title of the guide.\n    \n- `description`: The description of the guide.\n    \n- `author`: The author of the guide."
			},
			"response": []
		},
		{
			"name": "Admin adds Governor",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"AdminsNewGovNG2\",\r\n  \"password\": \"passwordaho\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:7000/governor/addGoverner",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"governor",
						"addGoverner"
					]
				},
				"description": "### Add Governor\n\nThis endpoint allows the addition of a new governor.\n\n#### Request Body\n\n- username (string, required): The username of the new governor.\n    \n- password (string, required): The password for the new governor.\n    \n\n#### Response\n\nThe response for this request is a JSON object following the schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    // Add properties here based on the actual response\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "delete Advertisers-admin",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:7000/advertiser/deleteAdvertisers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"advertiser",
						"deleteAdvertisers"
					]
				},
				"description": "### Delete Advertisers\n\nThis endpoint is used to delete advertisers.\n\n#### Response\n\nThe response of this request is a JSON schema representing the structure of the response data. The schema includes the properties and data types of the response object."
			},
			"response": []
		},
		{
			"name": "deleteGuides-admin",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:7000/guide/deleteGuides",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"guide",
						"deleteGuides"
					]
				},
				"description": "This endpoint is used to delete guides. Upon a successful deletion, the response will be in JSON format, following a specific schema."
			},
			"response": []
		},
		{
			"name": "deleteSellers-admin",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:7000/seller/deleteSellers",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"seller",
						"deleteSellers"
					]
				},
				"description": "The `DELETE` request is used to delete sellers from the server. Upon successful deletion, the server will respond with a JSON schema representing the response data."
			},
			"response": []
		},
		{
			"name": "deleteTourists-admin",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:7000/tourist/deleteTourists",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"tourist",
						"deleteTourists"
					]
				},
				"description": "### DELETE /tourist/deleteTourists\n\nThis endpoint is used to delete tourist records.\n\n#### Request\n\nThe request to delete tourist records does not require a request body. The parameters are sent as part of the URL.\n\n- `touristIds` (array of strings, required): An array of tourist IDs to be deleted.\n    \n\n#### Response\n\nThe response for this request is a JSON schema describing the structure of the response data. The response does not include a body.\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Admin adds Admin",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"username\": \"admins new admin\",\r\n  \"password\": \"adminPassword\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:7000/admin/addAdmin",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"admin",
						"addAdmin"
					]
				},
				"description": "### Add Admin\n\nThis endpoint is used to add a new admin.\n\n#### Request Body\n\n- `username` (string): The username of the new admin.\n    \n- `password` (string): The password for the new admin.\n    \n\n#### Response\n\nThe response will include the status of the operation, along with any relevant messages or error details."
			},
			"response": []
		},
		{
			"name": "Get Guide Documents",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/guide/getDocuments/670987cd0350a180c8abc552",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"guide",
						"getDocuments",
						"670987cd0350a180c8abc552"
					]
				},
				"description": "### Get Documents\n\nThis endpoint retrieves the documents associated with the specified ID.\n\n#### Request\n\n- Method: GET\n    \n- URL: `localhost:7000/guide/getDocuments/670987cd0350a180c8abc552`\n    \n\n#### Response\n\nThe response of this request is a JSON schema representing the structure of the documents data."
			},
			"response": []
		},
		{
			"name": "Get Advertiser Docs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/advertiser/getDocuments/67097bfe5ca7e1aff317450b",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"advertiser",
						"getDocuments",
						"67097bfe5ca7e1aff317450b"
					]
				},
				"description": "### Get Advertiser Documents\n\nThis endpoint retrieves the documents for a specific advertiser.\n\n#### Request\n\n- Method: GET\n    \n- URL: `localhost:7000/advertiser/getDocuments/67097bfe5ca7e1aff317450b`\n    \n\n#### Response\n\nThe response will include the details of the documents associated with the advertiser."
			},
			"response": []
		},
		{
			"name": "Get seller Docs",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/seller/getDocuments/67036fd7702101af0c0a9174",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"seller",
						"getDocuments",
						"67036fd7702101af0c0a9174"
					]
				},
				"description": "### Retrieve Seller Documents\n\nThis endpoint makes an HTTP GET request to retrieve documents for a specific seller.\n\n#### Request\n\nThe request does not require a request body. The endpoint URL should include the seller ID as a path parameter.\n\n- Path parameter\n    \n    - sellerId (string, required): The unique identifier of the seller for whom the documents are to be retrieved.\n        \n\nExample:\n\n```\nlocalhost:7000/seller/getDocuments/67036fd7702101af0c0a9174\n\n ```\n\n#### Response\n\nThe response will be a JSON object containing the seller's documents. The structure of the response will follow the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"document1\": {\n      \"type\": \"string\"\n    },\n    \"document2\": {\n      \"type\": \"string\"\n    },\n    ...\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Accept Seller",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:7000/seller/accept/6709985771f5e1daf90de871",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"seller",
						"accept",
						"6709985771f5e1daf90de871"
					]
				},
				"description": "### Update Seller Acceptance Status\n\nThis endpoint sends an HTTP PUT request to update the acceptance status of a seller with a specific ID.\n\n#### Request Body\n\n- `status` (string, required): The new status to be assigned to the seller.\n    \n\n#### Response Body\n\nThe response will be a JSON object conforming to the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- `status` (string): The status of the response.\n    \n- `message` (string): A message indicating the outcome of the request."
			},
			"response": []
		},
		{
			"name": "Reject Seller",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:7000/seller/reject/6709985771f5e1daf90de871",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"seller",
						"reject",
						"6709985771f5e1daf90de871"
					]
				},
				"description": "### Delete Seller Rejection\n\nThis endpoint sends an HTTP DELETE request to reject a seller with the specified ID.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will indicate the success or failure of the seller rejection operation."
			},
			"response": []
		},
		{
			"name": "Accept Advertiser",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:7000/advertiser/accept/67097c9cd441597042e32866",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"advertiser",
						"accept",
						"67097c9cd441597042e32866"
					]
				},
				"description": "### Update Advertiser Acceptance\n\nThis endpoint allows the user to update the acceptance status of an advertiser.\n\n**Request Body**\n\n- `status` (string, required): The new status of the advertiser acceptance.\n    \n\n**Response**\n\n- `success` (boolean): Indicates whether the update was successful.\n    \n- `message` (string): A message confirming the result of the update."
			},
			"response": []
		},
		{
			"name": "Reject Advertiser",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:7000/advertiser/reject/67097bfe5ca7e1aff317450b",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"advertiser",
						"reject",
						"67097bfe5ca7e1aff317450b"
					]
				},
				"description": "# Advertiser Rejection\n\nThis endpoint sends an HTTP DELETE request to localhost:7000/advertiser/reject/67097bfe5ca7e1aff317450b in order to reject a specific advertiser.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response\n\nThe response for this request is expected to be a JSON object adhering to the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- `status` (string): Indicates the status of the rejection process.\n    \n- `message` (string): Provides a message regarding the rejection."
			},
			"response": []
		},
		{
			"name": "Accept Guide",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "localhost:7000/guide/accept/670987cd0350a180c8abc552",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"guide",
						"accept",
						"670987cd0350a180c8abc552"
					]
				},
				"description": "## Endpoint Description\n\nThis endpoint is used to accept a guide with the specified ID.\n\n### Request\n\n- Method: PUT\n    \n- URL: `localhost:7000/guide/accept/670987cd0350a180c8abc552`\n    \n- Body: The request body should contain the necessary data to accept the guide.\n    \n\n### Response\n\nThe response for this request will be in JSON format and will adhere to the specified JSON schema."
			},
			"response": []
		},
		{
			"name": "Reject Guide",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:7000/guide/reject/670972d4ec931a4ed5a6ba45",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"guide",
						"reject",
						"670972d4ec931a4ed5a6ba45"
					]
				},
				"description": "### Delete Guide Rejection\n\nThis endpoint sends an HTTP DELETE request to reject a guide with the specified ID.\n\n#### Response\n\nThe response for this request is expected to be a JSON schema describing the structure of the response data."
			},
			"response": []
		},
		{
			"name": "Get Pending Advertisers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/advertiser/pending",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"advertiser",
						"pending"
					]
				},
				"description": "### Get Pending Advertisers\n\nThis endpoint retrieves a list of pending advertisers.\n\n#### Request\n\nThe request does not require a request body.\n\n- Endpoint: `GET /advertiser/pending`\n    \n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"advertisers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\"\n          },\n          \"status\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Get Pending Guides",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/guide/pending",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"guide",
						"pending"
					]
				},
				"description": "### Get Pending Guide\n\nThis endpoint retrieves a list of pending guide requests.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will include an array of guide requests that are pending approval."
			},
			"response": []
		},
		{
			"name": "Get Pending Sellers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/seller/pending",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"seller",
						"pending"
					]
				},
				"description": "### Get Pending Sellers\n\nThis endpoint is used to retrieve a list of pending sellers.\n\n**Request**\n\n- Method: GET\n    \n- Endpoint: `localhost:7000/seller/pending`\n    \n- No request body required\n    \n\n**Response**\n\n- A JSON object containing the list of pending sellers with their details.\n    \n\nExample:\n\n``` json\n{\n    \"pendingSellers\": [\n        {\n            \"sellerId\": \"123\",\n            \"name\": \"John Doe\",\n            \"email\": \"johndoe@example.com\",\n            \"status\": \"pending\"\n        },\n        {\n            \"sellerId\": \"456\",\n            \"name\": \"Jane Smith\",\n            \"email\": \"janesmith@example.com\",\n            \"status\": \"pending\"\n        }\n    ]\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Advertiser Details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/advertiser/details/66f7306d9e7b6b91ae1ee324",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"advertiser",
						"details",
						"66f7306d9e7b6b91ae1ee324"
					]
				},
				"description": "This endpoint retrieves the details of a specific advertiser identified by the provided ID. The response for this request is a JSON schema representing the structure of the advertiser details."
			},
			"response": []
		},
		{
			"name": "Guide Details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/guide/details/66f9cbc50200520e5bb2df89",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"guide",
						"details",
						"66f9cbc50200520e5bb2df89"
					]
				},
				"description": "This endpoint retrieves the details of a guide with the specified ID. The response of this request is a JSON schema representing the guide details."
			},
			"response": []
		},
		{
			"name": "Seller Details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:7000/seller/details/6700157560faf1c9ff5ceb52",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"seller",
						"details",
						"6700157560faf1c9ff5ceb52"
					]
				},
				"description": "### Retrieve Seller Details\n\nThis endpoint retrieves the details of a specific seller identified by their unique ID.\n\n#### Request\n\n- Method: GET\n    \n- Endpoint: `localhost:7000/seller/details/6700157560faf1c9ff5ceb52`\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"sellerId\": {\n            \"type\": \"string\"\n        },\n        \"name\": {\n            \"type\": \"string\"\n        },\n        \"email\": {\n            \"type\": \"string\"\n        },\n        \"address\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"street\": {\n                    \"type\": \"string\"\n                },\n                \"city\": {\n                    \"type\": \"string\"\n                },\n                \"zipCode\": {\n                    \"type\": \"string\"\n                }\n            }\n        },\n        \"phone\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Hide Itenerary",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "localhost:7000/itinerary/hide/66ffc3fa0344dbcbccf01006",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"itinerary",
						"hide",
						"66ffc3fa0344dbcbccf01006"
					]
				},
				"description": "### Update Itinerary Visibility\n\nThis endpoint is used to update the visibility of a specific itinerary.\n\n#### Request\n\n- Method: PATCH\n    \n- URL: `localhost:7000/itinerary/hide/66ffc3fa0344dbcbccf01006`\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Get All Complaints",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/complaint",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"complaint"
					]
				},
				"description": "### Get Complaint Details\n\nThis endpoint allows you to retrieve details of a complaint.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/complaint`\n    \n\n#### Response\n\nThe response will include the details of the complaint such as the complaint ID, description, status, and any other relevant information."
			},
			"response": []
		},
		{
			"name": "Add reply to complaint",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Engy\",\r\n  \"text\": \"Mafeesh el kalam dah.\",\r\n  \"date\": \"2024-11-07\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:7000/complaint/replies/672956b47b0fe4e7c86800c5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"complaint",
						"replies",
						"672956b47b0fe4e7c86800c5"
					]
				},
				"description": "### POST /complaint/replies/{id}\n\nThis endpoint is used to submit a reply to a specific complaint.\n\n#### Request Body\n\n- `name` (string, required): The name of the respondent.\n    \n- `text` (string, required): The reply text.\n    \n- `date` (string, required): The date of the reply.\n    \n\n#### Response\n\nThe response schema for this request is as follows:\n\n``` json\n{\n  \"id\": \"string\",\n  \"name\": \"string\",\n  \"text\": \"string\",\n  \"date\": \"string\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "flag activity",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:7000/activity/hide/66ffd39c4b9e6524d5499bcb",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"activity",
						"hide",
						"66ffd39c4b9e6524d5499bcb"
					]
				},
				"description": "This endpoint allows you to send an HTTP PATCH request to hide a specific activity with the given ID. The request should be made to [http://localhost:7000/activity/hide/66ffd39c4b9e6524d5499bcb](http://localhost:7000/activity/hide/66ffd39c4b9e6524d5499bcb).\n\nThe response of this request is a JSON schema representing the data structure of the response."
			},
			"response": []
		},
		{
			"name": "unflag activity",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:7000/activity/unhide/66ffd39c4b9e6524d5499bcb",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"activity",
						"unhide",
						"66ffd39c4b9e6524d5499bcb"
					]
				},
				"description": "### PATCH /activity/unhide/{activity_id}\n\nThis endpoint is used to unhide a specific activity identified by the provided activity ID.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\",\n      \"description\": \"Indicates the status of the request.\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message providing additional information about the request status.\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "flag itinerary",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "localhost:7000/itinerary/hide/66ffc6e2c81d5380e68f1d30",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"itinerary",
						"hide",
						"66ffc6e2c81d5380e68f1d30"
					]
				},
				"description": "### PATCH /itinerary/hide/{itineraryId}\n\nThis endpoint is used to hide a specific itinerary identified by its unique ID.\n\n#### Request Body\n\n- No request body is required for this endpoint.\n    \n\n#### Response\n\nThe response for this request is a JSON object following the schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\",\n      \"description\": \"Indicates the status of the operation.\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "unflag itinerary",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://localhost:7000/itinerary/unhide/66ffc6e2c81d5380e68f1d30",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"itinerary",
						"unhide",
						"66ffc6e2c81d5380e68f1d30"
					]
				},
				"description": "This endpoint is used to unhide a specific itinerary by sending an HTTP PATCH request to the specified URL. The request body should include the necessary parameters to unhide the itinerary. Upon successful unhide operation, the response will include the updated details of the itinerary.\n\n### Request Body\n\n- `parameter1`: (text) The description of parameter1.\n    \n- `parameter2`: (text) The description of parameter2.\n    \n\n### Response\n\nThe response will include the updated details of the itinerary after the unhide operation."
			},
			"response": []
		},
		{
			"name": "count by month",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/tourist/countByMonth?date=2024-12-1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"countByMonth"
					],
					"query": [
						{
							"key": "date",
							"value": "2024-12-1"
						}
					]
				},
				"description": "### GET /tourist/countByMonth\n\nThis endpoint retrieves the count of tourists by month based on the provided date.\n\n#### Request\n\n- Method: GET\n    \n- URL: `localhost:5000/tourist/countByMonth`\n    \n- Query Parameters:\n    \n    - date (string, required): The date for which tourist count is to be retrieved (e.g. \"2024-12-1\").\n        \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"month\": \"string\",\n  \"count\": \"number\"\n}\n\n ```\n\nThe response contains the month and the corresponding count of tourists for the given date."
			},
			"response": []
		},
		{
			"name": "create promo code",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"code\": \"PROMONG2003test\",\r\n  \"value\": 0.5\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/promoCode/createPromoCode",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"promoCode",
						"createPromoCode"
					]
				},
				"description": "The `createPromoCode` endpoint is a POST request that allows the client to create a new promo code. The request should include a payload in the raw request body type with the `code` and `value` parameters.\n\n### Request Body\n\n- `code` (string): The unique code for the promo.\n    \n- `value` (number): The value or discount percentage associated with the promo code.\n    \n\n### Response\n\nThe response of this request is a JSON schema representing the structure of the response object. The specific properties and their data types will be defined in the JSON schema format."
			},
			"response": []
		},
		{
			"name": "Guides Request Deletion",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/guide/requestingdeletion",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"requestingdeletion"
					]
				},
				"description": "### Request Description\n\nThis endpoint is used to request deletion of a guide. The request does not require any request body parameters.\n\n### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- `status` (string): The status of the deletion request.\n    \n- `message` (string): A message indicating the outcome of the deletion request."
			},
			"response": []
		},
		{
			"name": "Advertiser Request Deletion",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/advertiser/requestingdeletion",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"requestingdeletion"
					]
				},
				"description": "The `GET` request to `/advertiser/requestingdeletion` endpoint retrieves the response in a JSON format. Below is the JSON schema representing the structure of the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Seller Request Deletion",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller/requestingdeletion",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"requestingdeletion"
					]
				},
				"description": "### Request Description\n\nThis endpoint is used to initiate a request for account deletion by the seller.\n\n### Request Body\n\nThis request does not require a request body.\n\n### Response\n\nThe response for this request is a JSON schema, describing the structure of the response data."
			},
			"response": []
		},
		{
			"name": "Tourist Request Deletion",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/tourist/requestingdeletion",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"requestingdeletion"
					]
				},
				"description": "### Requesting Deletion of Tourist Data\n\nThis endpoint sends an HTTP GET request to localhost:5000/tourist/requestingdeletion in order to initiate the deletion process for tourist data.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will contain the status of the deletion request."
			},
			"response": []
		},
		{
			"name": "get a seller by ID",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller/66f8123722bfbb2a5f8d55e4",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"66f8123722bfbb2a5f8d55e4"
					]
				},
				"description": "### GET /seller/66f8123722bfbb2a5f8d55e4\n\nThis endpoint retrieves the details of a specific seller identified by the provided ID.\n\n#### Request\n\nNo request body is required for this endpoint.\n\n#### Response\n\nThe response will be a JSON object with the following properties:\n\n- `sellerId` (string): The unique identifier of the seller.\n    \n- `name` (string): The name of the seller.\n    \n- `email` (string): The email address of the seller.\n    \n- `address` (string): The address of the seller.\n    \n- `phone` (string): The contact phone number of the seller.\n    \n- `products` (array): An array of products offered by the seller, each containing the following properties:\n    \n    - `productId` (string): The unique identifier of the product.\n        \n    - `name` (string): The name of the product.\n        \n    - `price` (number): The price of the product.\n        \n    - `quantity` (number): The available quantity of the product.\n        \n\n``` json\n{\n  \"sellerId\": \"string\",\n  \"name\": \"string\",\n  \"email\": \"string\",\n  \"address\": \"string\",\n  \"phone\": \"string\",\n  \"products\": [\n    {\n      \"productId\": \"string\",\n      \"name\": \"string\",\n      \"price\": 0,\n      \"quantity\": 0\n    }\n  ]\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "delete a seller",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller/66f72a05a60823e7bb999172",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"66f72a05a60823e7bb999172"
					]
				},
				"description": "### Delete Seller\n\nThis endpoint sends an HTTP DELETE request to delete the seller with the specified ID.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will not contain a response body. The status of the response will indicate the success or failure of the deletion operation."
			},
			"response": []
		},
		{
			"name": "Seller Create Profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"sfdsfs\",\r\n    \"desc\": \"ddfd\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/seller/sellerCreateProfile/670084dfe6317d13e99371af",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"sellerCreateProfile",
						"670084dfe6317d13e99371af"
					]
				},
				"description": "### Create Seller Profile\n\nThis endpoint makes an HTTP POST request to create a seller profile with the provided ID.\n\n#### Request Body\n\n- `name` (string): The name of the seller.\n    \n- `desc` (string): The description of the seller.\n    \n\n#### Response\n\nThe response will contain the result of the seller profile creation."
			},
			"response": []
		},
		{
			"name": "sellerReadProfile",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller/sellerReadProfile/67017caac825976561849aa1",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"sellerReadProfile",
						"67017caac825976561849aa1"
					]
				},
				"description": "This endpoint makes an HTTP GET request to retrieve the profile of a seller with the specified ID. The response of this request is a JSON schema representing the seller's profile information."
			},
			"response": []
		},
		{
			"name": "Seller Delete Himself",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller/sellerDeleteHimself/670122713234f59bcbb7cf76",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"sellerDeleteHimself",
						"670122713234f59bcbb7cf76"
					]
				},
				"description": "The `sellerDeleteHimself` endpoint is used to delete the seller's own account.\n\n### Response\n\nThe response of this request is a JSON schema representing the result of the deletion operation."
			},
			"response": []
		},
		{
			"name": "Guest Seller Create Profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "tatosSeller2701",
							"type": "text"
						},
						{
							"key": "email",
							"value": "ahmedhamada33331@gmail.com",
							"type": "text"
						},
						{
							"key": "pass",
							"value": "dfadsfdsfds",
							"type": "text"
						},
						{
							"key": "id",
							"type": "file",
							"src": "/C:/Users/aboud/Pictures/Camera Roll/Profile Picture.jpg"
						},
						{
							"key": "taxationRegCard",
							"type": "file",
							"src": "/C:/Users/aboud/Pictures/Camera Roll/Profile Picture.jpg"
						}
					]
				},
				"url": {
					"raw": "localhost:5000/seller/guestSellerCreateProfile",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"guestSellerCreateProfile"
					]
				},
				"description": "### Create Guest Seller Profile\n\nThis endpoint allows the creation of a guest seller profile.\n\n#### Request Body\n\n- No request body parameters are required for this endpoint.\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"sellerId\": {\n          \"type\": \"string\"\n        },\n        \"profileCreated\": {\n          \"type\": \"boolean\"\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Guest Advertiser Create Profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"advertiser1223\",\r\n    \"email\": \"guest1Ad2@gmail.com\",\r\n    \"pass\": \"Ad123\",\r\n    \"id\": \"642b0c11c84215c3e470b9a8\",\r\n    \"taxationRegCard\": \"642b0c11c84215c3e470b9a5\"\r\n    \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/advertiser/guestAdvertiserCreateProfile",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"guestAdvertiserCreateProfile"
					]
				},
				"description": "### Create Guest Advertiser Profile\n\nThis API endpoint allows the creation of a guest advertiser profile.\n\n#### Request Body\n\n- `username` (string): The username of the advertiser.\n    \n- `email` (string): The email address of the advertiser.\n    \n- `pass` (string): The password for the advertiser's account.\n    \n- `id` (string): The unique identifier for the advertiser.\n    \n- `taxationRegCard` (string): The taxation registration card for the advertiser.\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n    \"status\": \"string\",\n    \"message\": \"string\",\n    \"data\": {\n        \"userId\": \"string\",\n        \"profileId\": \"string\",\n        \"createdAt\": \"string\"\n    }\n}\n\n ```\n\n- `status` (string): The status of the response.\n    \n- `message` (string): A message indicating the result of the request.\n    \n- `data` (object): An object containing the user ID, profile ID, and creation timestamp."
			},
			"response": []
		},
		{
			"name": "Guest Guide Create Profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "username",
							"value": "tatosSeller",
							"type": "text"
						},
						{
							"key": "email",
							"value": "akjfdlfkdsajflda@gmail.com",
							"type": "text"
						},
						{
							"key": "data",
							"value": "aafdsafdasfdsfds",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "localhost:5000/guide/guestGuideCreateProfile",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"guestGuideCreateProfile"
					]
				},
				"description": "### /guide/guestGuideCreateProfile\n\nThis endpoint is used to create a new profile for a guest guide.\n\n#### Request\n\n- Method: POST\n    \n- URL: `localhost:5000/guide/guestGuideCreateProfile`\n    \n- Body: form-data\n    \n\n#### Request Body Parameters\n\n- No request body parameters provided.\n    \n\n#### Response\n\nThe response for this request is a JSON schema. Below is the JSON schema for the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Admin Edit Product (SellerID)",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"TatosellerProduct\",\r\n  \"price\": 99312.99,\r\n  \"desc\": \"Updated\",\r\n  \"quantity\": 112\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/67018b633cc447330adb795f/product/67018eff3b06c8dd9b4f9fd8/adminSellerEditProduct",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"67018b633cc447330adb795f",
						"product",
						"67018eff3b06c8dd9b4f9fd8",
						"adminSellerEditProduct"
					]
				},
				"description": "The HTTP PATCH request is used to update a specific product for an admin seller. The request should be sent to [http://localhost:5000/product/67018b633cc447330adb795f/product/67018eff3b06c8dd9b4f9fd8/adminSellerEditProduct](http://localhost:5000/product/67018b633cc447330adb795f/product/67018eff3b06c8dd9b4f9fd8/adminSellerEditProduct).\n\n### Request Body\n\nThe request body should be in JSON format and include the following parameters:\n\n- `name`: (string) The updated name of the product.\n    \n- `price`: (number) The updated price of the product.\n    \n- `desc`: (string) The updated description of the product.\n    \n- `quantity`: (number) The updated quantity of the product.\n    \n\n### Response\n\nThe response will be in JSON format and should adhere to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Admin Edit Product (Admin ID)",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"TatosellerProduct\",\r\n  \"price\": 99312.99,\r\n  \"desc\": \"Updated\",\r\n  \"quantity\": 112\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/66ffebfb7b5c0167a339cbdb/product/67018fac3b06c8dd9b4f9fe8/adminSellerEditProduct",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"66ffebfb7b5c0167a339cbdb",
						"product",
						"67018fac3b06c8dd9b4f9fe8",
						"adminSellerEditProduct"
					]
				},
				"description": "### Update Product by Admin Seller\n\nThis endpoint allows an admin seller to update a specific product.\n\n#### Request\n\n- Method: PATCH\n    \n- URL: `http://localhost:5000/product/66ffebfb7b5c0167a339cbdb/product/67018fac3b06c8dd9b4f9fe8/adminSellerEditProduct`\n    \n- { \"name\": \"TatosellerProduct\", \"price\": 99312.99, \"desc\": \"Updated\", \"quantity\": 112}\n    \n\n#### Response\n\nThe response for this request will be a JSON schema. Please refer to the API documentation for the schema details."
			},
			"response": []
		},
		{
			"name": "Guest Tourist Create Profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"username\": \"TatosTourist\",\r\n        \"email\": \"TatosTourist@example.com\",\r\n        \"pass\": \"12345\",\r\n        \"mobile\": \"+201211907070\",\r\n        \"nationality\": \"Egypt\",\r\n        \"dob\": \"2004-01-4\",\r\n        \"occupation\": \"Engineer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:5000/tourist/guestTouristCreateProfile",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"guestTouristCreateProfile"
					]
				},
				"description": "### Create Tourist Profile\n\nThis endpoint allows the creation of a new tourist profile.\n\n#### Request Body\n\n- `username` (string): The username of the tourist.\n    \n- `email` (string): The email address of the tourist.\n    \n- `pass` (string): The password for the tourist account.\n    \n- `mobile` (string): The mobile number of the tourist.\n    \n- `nationality` (string): The nationality of the tourist.\n    \n- `dob` (string): The date of birth of the tourist in the format YYYY-MM-DD.\n    \n- `occupation` (string): The occupation of the tourist.\n    \n\n#### Response\n\nThe response will contain the status of the profile creation request."
			},
			"response": []
		},
		{
			"name": "Admin Archive Product (SellerID)",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"archived\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/670115a321dd828e9f3a24af/product/670823e422c80d43da3800a7/adminSellerArchiveProduct",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"670115a321dd828e9f3a24af",
						"product",
						"670823e422c80d43da3800a7",
						"adminSellerArchiveProduct"
					]
				},
				"description": "This endpoint is used to update the archived status of a product by making an HTTP PATCH request. The request should be sent to [http://localhost:5000/product/670115a321dd828e9f3a24af/product/670823e422c80d43da3800a7/adminSellerArchiveProduct](http://localhost:5000/product/670115a321dd828e9f3a24af/product/670823e422c80d43da3800a7/adminSellerArchiveProduct). The request body should be in raw format and include a JSON payload with the \"archived\" key set to a boolean value.\n\n### Response\n\nThe response of this request is a JSON schema. The specific structure of the response will depend on the server's implementation and the success or failure of the request."
			},
			"response": []
		},
		{
			"name": "Admin Archive Product (AdminID)",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"archived\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/67003cbd461421859422dd48/product/6708240822c80d43da3800ab/adminSellerArchiveProduct",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"67003cbd461421859422dd48",
						"product",
						"6708240822c80d43da3800ab",
						"adminSellerArchiveProduct"
					]
				},
				"description": "### Update Product Archive Status\n\nThis endpoint is used to update the archive status of a product by sending an HTTP PATCH request.\n\n#### Request Body\n\n- `archived` (boolean): A flag to indicate whether the product should be archived or not.\n    \n\n#### Response\n\nThe response will include the updated product details."
			},
			"response": []
		},
		{
			"name": "Admin Add Product (SellerID)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"TatSELLERproduct123\",\r\n  \"price\": 342345,\r\n  \"desc\": \"This is a sample product.\",\r\n  \"quantity\": 341\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/67018b633cc447330adb795f/product/adminSellerAddProduct",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"67018b633cc447330adb795f",
						"product",
						"adminSellerAddProduct"
					]
				},
				"description": "The endpoint `http://localhost:5000/product/67018b633cc447330adb795f/product/adminSellerAddProduct` is a POST request to add a new product for an admin seller. The request should include a JSON payload with the keys `name`, `price`, `desc`, and `quantity` to specify the product details.\n\n### Response\n\nThe response of this request can be documented as a JSON schema."
			},
			"response": []
		},
		{
			"name": "Admin Add Product (Admin ID)",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"AdminProductTestingTatos\",\r\n  \"price\": 122,\r\n  \"desc\": \"This is a sample product.\",\r\n  \"quantity\": 12\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/66ffebfb7b5c0167a339cbdb/product/adminSellerAddProduct",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"66ffebfb7b5c0167a339cbdb",
						"product",
						"adminSellerAddProduct"
					]
				},
				"description": "### Add Product for Admin Seller\n\nThis endpoint allows the admin seller to add a new product to the system.\n\n#### Request Body\n\n- `name` (string, required): The name of the product.\n    \n- `price` (number, required): The price of the product.\n    \n- `desc` (string, required): Description of the product.\n    \n- `quantity` (number, required): The quantity of the product available.\n    \n\n#### Response\n\nThe response for this request will be a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"productId\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Seller Accept Terms",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"acceptedTerms\" : true\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/seller/acceptTerms/67036fd7702101af0c0a9174",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"acceptTerms",
						"67036fd7702101af0c0a9174"
					]
				},
				"description": "### Update Seller Acceptance of Terms\n\nThis endpoint is used to update the acceptance of terms for a seller.\n\n**Request Body**\n\n- acceptedTerms (boolean, required): Indicates whether the seller has accepted the terms.\n    \n\n#### Response\n\nThe response will include the updated details of the seller's acceptance of terms."
			},
			"response": []
		},
		{
			"name": "Advertiser Accept Terms",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"acceptedTerms\" : true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/advertiser/acceptTerms/66f7306d9e7b6b91ae1ee324",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"acceptTerms",
						"66f7306d9e7b6b91ae1ee324"
					]
				},
				"description": "### Update Advertiser Acceptance of Terms\n\nThis endpoint is used to update the acceptance of terms for a specific advertiser.\n\n#### Request Body\n\n- `acceptedTerms` (boolean): Indicates whether the terms have been accepted.\n    \n\n#### Response\n\nThe response will include the updated details of the advertiser's acceptance of terms."
			},
			"response": []
		},
		{
			"name": "View Sales Report (Admin)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/admin/viewSalesReport/66f595329d159c1c903c84b0",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"admin",
						"viewSalesReport",
						"66f595329d159c1c903c84b0"
					]
				},
				"description": "### View Sales Report\n\nThis endpoint makes an HTTP GET request to retrieve the sales report with the specified ID.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response Body\n\n- `reportId` (string): The ID of the sales report.\n    \n- `reportDate` (string): The date of the sales report.\n    \n- `totalSales` (number): The total sales amount for the specified report.\n    \n- `itemsSold` (array): An array of items sold, each containing:\n    \n    - `itemName` (string): The name of the item sold.\n        \n    - `quantity` (number): The quantity of the item sold.\n        \n    - `revenue` (number): The revenue generated from the item sold."
			},
			"response": []
		},
		{
			"name": "View Sales Report (Seller)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/seller/viewSalesReport/6702972a8119d73005407893",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"viewSalesReport",
						"6702972a8119d73005407893"
					]
				},
				"description": "### GET /seller/viewSalesReport/{reportId}\n\nThis endpoint retrieves the sales report for the specified report ID.\n\n#### Request\n\n- Path Parameters\n    \n    - `reportId` (string, required): The unique identifier of the sales report.\n        \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"reportId\": {\n            \"type\": \"string\"\n        },\n        \"reportName\": {\n            \"type\": \"string\"\n        },\n        \"salesData\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    \"date\": {\n                        \"type\": \"string\",\n                        \"format\": \"date\"\n                    },\n                    \"totalSales\": {\n                        \"type\": \"number\"\n                    }\n                }\n            }\n        }\n    }\n}\n\n ```\n\nThe response includes the `reportId` and `reportName` along with an array of `salesData`, each containing the `date` and `totalSales` for the corresponding date."
			},
			"response": []
		},
		{
			"name": "View  Sales Report (Guide)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/guide/viewSalesReport/67321b6fec709af0434dcd30",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"viewSalesReport",
						"67321b6fec709af0434dcd30"
					]
				},
				"description": "This endpoint retrieves the sales report with the specified ID.\n\nThe response of this request is a JSON object representing the sales report. To document the response as a JSON schema, you can use a tool like JSON Schema to define the structure of the response object, including its properties, data types, and any required or optional fields."
			},
			"response": []
		},
		{
			"name": "View Sales Report (advertiser)",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:5000/advertiser/viewSalesReport/672aa626b824e6054ca52fd3",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"viewSalesReport",
						"672aa626b824e6054ca52fd3"
					]
				},
				"description": "# View Sales Report\n\nThis endpoint retrieves the sales report for a specific advertiser.\n\n## Request\n\n### Request URL\n\n- Method: GET\n    \n- URL: `localhost:5000/advertiser/viewSalesReport/672aa626b824e6054ca52fd3`\n    \n\n## Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"reportId\": {\n      \"type\": \"string\"\n    },\n    \"advertiserId\": {\n      \"type\": \"string\"\n    },\n    \"startDate\": {\n      \"type\": \"string\",\n      \"format\": \"date\"\n    },\n    \"endDate\": {\n      \"type\": \"string\",\n      \"format\": \"date\"\n    },\n    \"totalSales\": {\n      \"type\": \"number\"\n    },\n    \"currency\": {\n      \"type\": \"string\"\n    },\n    \"salesData\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"date\": {\n            \"type\": \"string\",\n            \"format\": \"date\"\n          },\n          \"salesAmount\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Get All Promo Codes",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/promocode",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"promocode"
					]
				},
				"description": "### Get Promo Code\n\nThis endpoint makes an HTTP GET request to retrieve the promo code.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\n- `promo_code`: (string) The promo code value.\n    \n- `valid_until`: (string) The expiration date of the promo code."
			},
			"response": []
		},
		{
			"name": "Add Blog",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"category\": \"Family-friendly\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8000/addBlog",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8000",
					"path": [
						"addBlog"
					]
				},
				"description": "### Add Blog\n\nThe `addBlog` endpoint is used to add a new blog with the specified category.\n\n#### Request Body\n\n- category (string, required): The category of the blog.\n    \n\n#### Response\n\nThe response of this request is a JSON object conforming to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"status\": {\n            \"type\": \"string\"\n        },\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Activity Search",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"searchString\": \"Off-Roading\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/activity/searchForThis/searchAgain",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"activity",
						"searchForThis",
						"searchAgain"
					]
				},
				"description": "### GET /activity/searchForThis/searchAgain\n\nThis endpoint retrieves search results based on the provided search string.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/activity/searchForThis/searchAgain`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- { \"searchString\": \"Off-Roading\"}\n    \n\n#### Response\n\nThe response for this request is a JSON object."
			},
			"response": []
		},
		{
			"name": "Itinerary Search",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"searchString\": \"city\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/itinerary/searchForThis/searchAgain",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"searchForThis",
						"searchAgain"
					]
				},
				"description": "This endpoint makes an HTTP GET request to search for itineraries based on the provided search string. The request should include the search string in the URL path. For example, to search for itineraries related to a specific city, the search string \"city\" should be included in the URL path.\n\n### Response\n\nThe response of this request is a JSON schema representing the structure of the data returned by the server. The JSON schema will define the properties and their types that can be expected in the response. This schema can be used to validate and understand the structure of the response data."
			},
			"response": []
		},
		{
			"name": "Venue Search",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"searchString\": \"giza\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/venue/searchForThis/searchAgain",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"venue",
						"searchForThis",
						"searchAgain"
					]
				},
				"description": "### Venue Search\n\nThis endpoint retrieves venue information based on the provided search string.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/venue/searchForThis/searchAgain`\n    \n- Query Parameters:\n    \n    - searchString: (string) The search string to filter the venue information.\n        \n\n#### Response\n\nThe response of this request is a JSON schema representing the venue information.\n\nExample Response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"venueName\": {\n      \"type\": \"string\"\n    },\n    \"venueLocation\": {\n      \"type\": \"string\"\n    },\n    \"venueCapacity\": {\n      \"type\": \"integer\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Tourist Redeem Points",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/redeemPoints/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"redeemPoints",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "This endpoint is used to redeem points for a tourist with a specific ID. The HTTP PATCH request should be made to the URL [http://localhost:5000/tourist/redeemPoints/66f6afa80f0094718a203f1d](http://localhost:5000/tourist/redeemPoints/66f6afa80f0094718a203f1d) with a payload containing a \"searchString\" parameter set to the desired value.\n\n### Request\n\nThe request should be a PATCH method to the specified URL. The payload should contain a \"searchString\" parameter set to the desired value.\n\n### Request Body\n\n- `searchString` (string, required): The desired value to be used for redeeming the points.\n    \n\n### Response\n\nThe response for this request is expected to be in JSON format. A JSON schema can be defined based on the expected structure of the response data."
			},
			"response": []
		},
		{
			"name": "Tourist Complaint",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"first complaint\",\r\n    \"body\": \"body of first complaint\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/complaint/fileComplaint/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"complaint",
						"fileComplaint",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### File Complaint\n\nThis endpoint is used to file a complaint.\n\n#### Request Body\n\n- title (string, required): The title of the complaint.\n    \n- body (string, required): The body of the complaint.\n    \n\n#### Response\n\nThe response of this request is a JSON object with the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\",\n  \"complaintId\": \"string\"\n}\n\n ```\n\n- status (string): The status of the response.\n    \n- message (string): A message related to the response.\n    \n- complaintId (string): The ID of the filed complaint."
			},
			"response": []
		},
		{
			"name": "Tourist My Complaints",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"title\": \"first complaint\",\r\n    \"body\": \"body of first complaint\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/complaint/myComplaints/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"complaint",
						"myComplaints",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### Get Complaint Details\n\nThis endpoint retrieves the details of a specific complaint.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/complaint/myComplaints/66f6afa80f0094718a203f1d`\n    \n\n#### Response\n\nThe response will include the details of the complaint, such as the title and body."
			},
			"response": []
		},
		{
			"name": "Product Feedback",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5,\r\n    \"comments\": \"great product\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/66f72f100f0094718a60bc4f/products/66f6ae2a0f0094718a1f7d82/feedback",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"66f72f100f0094718a60bc4f",
						"products",
						"66f6ae2a0f0094718a1f7d82",
						"feedback"
					]
				},
				"description": "### Add Product Feedback\n\nThis endpoint allows the user to submit feedback for a specific product.\n\n#### Request Body\n\n- `rating` (number) - The rating given for the product.\n    \n- `comments` (string) - Additional comments about the product.\n    \n\n#### Response\n\nThe response of this request is a JSON object with the following schema:\n\n``` json\n{\n  \"feedbackId\": \"string\",\n  \"productId\": \"string\",\n  \"userId\": \"string\",\n  \"rating\": \"number\",\n  \"comments\": \"string\",\n  \"createdAt\": \"string\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Itinerary Feedback",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5,\r\n    \"comments\": \"great itinerary ofc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/itinerary/66f6afa80f0094718a203f0e/itinerary/66f6adef0f0094718a1f6050/feedback",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"66f6afa80f0094718a203f0e",
						"itinerary",
						"66f6adef0f0094718a1f6050",
						"feedback"
					]
				},
				"description": "### Add Itinerary Feedback\n\nThis endpoint allows the user to add feedback for a specific itinerary.\n\n#### Request Body\n\n- `rating` (number): The rating given to the itinerary.\n    \n- `comments` (string): Additional comments about the itinerary.\n    \n\n#### Response\n\nThe response will include the status of the feedback submission."
			},
			"response": []
		},
		{
			"name": "Activity Feedback",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5,\r\n    \"comments\": \"great itinerary ofc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/activity/66f6afa80f0094718a203f1d/activity/66f6ac560f0094718a1e9e77/feedback",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"activity",
						"66f6afa80f0094718a203f1d",
						"activity",
						"66f6ac560f0094718a1e9e77",
						"feedback"
					]
				},
				"description": "### Add Feedback\n\nThis endpoint allows the user to add feedback for a specific activity.\n\n#### Request Body\n\n- `rating` (number): The rating given for the activity.\n    \n- `comments` (string): Additional comments about the activity.\n    \n\n#### Response\n\nThe response will include the status of the feedback submission."
			},
			"response": []
		},
		{
			"name": "Guide Feedback",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5,\r\n    \"comments\": \"great guide ofc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/guide/66f6afa80f0094718a203f1e/guide/66f6adef0f0094718a1f6050/feedback",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"66f6afa80f0094718a203f1e",
						"guide",
						"66f6adef0f0094718a1f6050",
						"feedback"
					]
				},
				"description": "### Add Guide Feedback\n\nThis endpoint allows the user to submit feedback for a specific guide. The HTTP POST request should be made to [http://localhost:5000/guide/66f6afa80f0094718a203f1e/guide/66f6adef0f0094718a1f6050/feedback](http://localhost:5000/guide/66f6afa80f0094718a203f1e/guide/66f6adef0f0094718a1f6050/feedback).\n\n#### Request Body\n\n- `rating` (number): The rating given to the guide.\n    \n- `comments` (string): Additional comments about the guide.\n    \n\n#### Response\n\nThe response will include the status of the feedback submission."
			},
			"response": []
		},
		{
			"name": "Cancel Itinerary Booking",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/66f6afa80f0094718a203f1e/itinerary/66f6adef0f0094718a1f6050/cancel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"66f6afa80f0094718a203f1e",
						"itinerary",
						"66f6adef0f0094718a1f6050",
						"cancel"
					]
				},
				"description": "### DELETE /tourist/66f6afa80f0094718a203f1e/itinerary/66f6adef0f0094718a1f6050/cancel\n\nThis endpoint is used to cancel a specific itinerary for a tourist.\n\n#### Headers\n\n- No specific headers are required for this request.\n    \n\n#### Parameters\n\n- No parameters are required for this request.\n    \n\n#### Response\n\nThe response for this request can be documented as a JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"success\": {\n      \"type\": \"boolean\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Cancel Activity Booking",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"rating\": 5,\r\n    \"comments\": \"great guide ofc\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/66f6afa80f0094718a203f1d/activity/66f6ac560f0094718a1e9e73/cancel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"66f6afa80f0094718a203f1d",
						"activity",
						"66f6ac560f0094718a1e9e73",
						"cancel"
					]
				},
				"description": "### DELETE /tourist/66f6afa80f0094718a203f1d/activity/66f6ac560f0094718a1e9e73/cancel\n\nThis endpoint is used to cancel a specific activity for a tourist.\n\n#### Request Body\n\n- `rating` (number): The rating given for the activity.\n    \n- `comments` (string): Comments or feedback for the activity.\n    \n\n#### Response\n\nThe response for this request is a JSON schema. Please refer to the API documentation for the response schema."
			},
			"response": []
		},
		{
			"name": "Email Share",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"link\": \"google.com\",\r\n    \"email\": \"ahmedamrabolfadl1@gmail.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/emailShare/66f6afa80f0094718a203f1e",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"emailShare",
						"66f6afa80f0094718a203f1e"
					]
				},
				"description": "### POST /tourist/emailShare/{id}\n\nThis endpoint is used to share a link with a tourist via email.\n\n#### Request Body\n\n- `link` (string): The link to be shared.\n    \n- `email` (string): The email address of the tourist.\n    \n\n#### Path Parameters\n\n- `id` (string): The ID of the tourist.\n    \n\n#### Response\n\nThe response will include the status of the email sharing process."
			},
			"response": []
		},
		{
			"name": "Search Hotel",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"checkInDate\": \"2024-10-01\",\r\n    \"checkOutDate\": \"2024-10-10\",\r\n    \"count\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/hotels/searchHotel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"hotels",
						"searchHotel"
					]
				},
				"description": "# Search Hotel\n\nThis endpoint is used to search for hotels based on the check-in and check-out dates, and the number of guests.\n\n## Request\n\n- Method: GET\n    \n- Endpoint: `http://localhost:5000/tourist/hotels/searchHotel`\n    \n- Query Parameters:\n    \n    - `checkInDate` (string, required): The check-in date for the hotel search.\n        \n    - `checkOutDate` (string, required): The check-out date for the hotel search.\n        \n    - `count` (number, required): The number of guests.\n        \n\n## Response\n\nThe response for this request is a JSON schema with the following properties:\n\n- `property1` (type): Description of property1.\n    \n- `property2` (type): Description of property2.\n    \n- ...\n    \n\nExample response:\n\n``` json\n{\n  \"property1\": \"value1\",\n  \"property2\": \"value2\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Book Flight",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"flightId\":1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/flights/bookFlight",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"flights",
						"bookFlight"
					]
				},
				"description": "This endpoint is used to book a flight for a tourist. It is an HTTP POST request to `http://localhost:5000/tourist/flights/bookFlight`.\n\n### Request Body\n\n- `flightId` (number) - The ID of the flight to be booked.\n    \n\n### Response\n\nThe response of this request can be documented as a JSON schema."
			},
			"response": []
		},
		{
			"name": "Search Flights",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"origin\": \"CAI\",\r\n    \"destination\": \"FCO\",\r\n    \"departureDate\": \"2024-10-10\",\r\n    \"returnDate\": \"2024-11-11\",\r\n    \"count\": 2\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/flights/searchFlights",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"flights",
						"searchFlights"
					]
				},
				"description": "### Search Flights\n\nThis endpoint retrieves a list of available flights for tourists based on the specified origin, destination, departure date, return date, and passenger count.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/tourist/flights/searchFlights`\n    \n- Query Parameters:\n    \n    - origin (string): The three-letter code for the origin airport.\n        \n    - destination (string): The three-letter code for the destination airport.\n        \n    - departureDate (string): The date of departure in the format \"YYYY-MM-DD\".\n        \n    - returnDate (string): The date of return in the format \"YYYY-MM-DD\".\n        \n    - count (integer): The number of passengers.\n        \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"flights\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"object\",\n                \"properties\": {\n                    // Flight details properties\n                }\n            }\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Book Hotel",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"dest_id\": \"-553173\", \r\n    \"checkin\": \"2025-10-01\",\r\n    \"checkout\": \"2025-10-05\",\r\n    \"count\":1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/hotels/bookHotel",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"hotels",
						"bookHotel"
					]
				},
				"description": "### Book Hotel\n\nThis endpoint allows users to book a hotel for a specified destination and duration.\n\n#### Request Body\n\n- `dest_id` (string) - The ID of the destination for the hotel booking.\n    \n- `checkin` (string) - The check-in date for the hotel booking in the format \"YYYY-MM-DD\".\n    \n- `checkout` (string) - The check-out date for the hotel booking in the format \"YYYY-MM-DD\".\n    \n- `count` (number) - The number of rooms to book.\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"booking_id\": \"string\",\n  \"hotel_name\": \"string\",\n  \"checkin\": \"string\",\n  \"checkout\": \"string\",\n  \"total_amount\": \"number\"\n}\n\n ```\n\n- `booking_id` (string) - The unique identifier for the hotel booking.\n    \n- `hotel_name` (string) - The name of the booked hotel.\n    \n- `checkin` (string) - The check-in date for the booked hotel.\n    \n- `checkout` (string) - The check-out date for the booked hotel.\n    \n- `total_amount` (number) - The total amount for the hotel booking."
			},
			"response": []
		},
		{
			"name": "upload",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "id",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "http://localhost:5000/upload",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"upload"
					]
				},
				"description": "### Upload File\n\nThis endpoint allows you to upload a file using a POST request.\n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "category",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "image",
							"type": "file",
							"src": []
						},
						{
							"key": "username",
							"value": "ahmedIsAnAdmin",
							"type": "text"
						},
						{
							"key": "pass",
							"value": "ahmedPass",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:5000/category/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"category",
						""
					]
				},
				"description": "This endpoint retrieves a list of categories.\n\n### Response\n\nThe response for this request can be documented as a JSON schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"categories\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Create category",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"category\": \"family-friendly\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/category/categoryCreate",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"category",
						"categoryCreate"
					]
				},
				"description": "### Category Creation\n\nThis endpoint allows the creation of a new category.\n\n#### Request Body\n\n- category (string, required): The name of the category to be created.\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Update specific category",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"category\": \"Family-friendly\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/category/66fc5589bfb9664e253e8207",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"category",
						"66fc5589bfb9664e253e8207"
					]
				},
				"description": "### Update Category\n\nThis endpoint is used to update a specific category.\n\n#### Request\n\n- Method: `PATCH`\n    \n- URL: `http://localhost:5000/category/66fc5589bfb9664e253e8207`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- { \"category\": \"Family-friendly\"}\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete Category",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/category/66fc5589bfb9664e253e8207",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"category",
						"66fc5589bfb9664e253e8207"
					]
				},
				"description": "### Delete Category\n\nThis endpoint is used to delete a specific category.\n\n#### Request\n\n- Method: DELETE\n    \n- URL: `http://localhost:5000/category/66fc5589bfb9664e253e8207`\n    \n\n#### Response\n\n- The response will not contain a body, only a status code indicating the success or failure of the deletion operation.\n    \n\n#### Headers\n\nNo specific headers are required for this request."
			},
			"response": []
		},
		{
			"name": "Seller Read Profile",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"desc\": \"this is desc for ahmedhamada\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/seller/sellerReadProfile/66fee17ab8d22716bbc87555",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"sellerReadProfile",
						"66fee17ab8d22716bbc87555"
					]
				},
				"description": "### Seller Read Profile\n\nThis endpoint allows you to retrieve the profile information of a specific seller.\n\n#### Request Body\n\n- desc (string, required): A description for the seller.\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"sellerId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"phone\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Seller Update Profile",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"desc\": \"this is desc for ahmedhamada\",\r\n    \"email\": \"ahmedupdated@gmail.com\",\r\n    \"name\": \"ahmedhamada law firm\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/seller/sellerUpdateProfile/66fee17ab8d22716bbc87555",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"sellerUpdateProfile",
						"66fee17ab8d22716bbc87555"
					]
				},
				"description": "This endpoint is used to update the profile of a seller. It makes an HTTP PATCH request to [http://localhost:5000/seller/sellerUpdateProfile/66fee17ab8d22716bbc87555](http://localhost:5000/seller/sellerUpdateProfile/66fee17ab8d22716bbc87555). The request body should be in raw format and include the following parameters:\n\n- `desc`: A description for the seller's profile update.\n    \n- `email`: The updated email of the seller.\n    \n- `name`: The updated name of the seller or the seller's firm.\n    \n\nThe response to this request will include the updated profile information for the seller."
			},
			"response": []
		},
		{
			"name": "Tourist Read Profile",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/touristReadProfile/66fed9394ea73680bc716187",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"touristReadProfile",
						"66fed9394ea73680bc716187"
					]
				},
				"description": "This endpoint retrieves the profile information of a tourist with the specified ID.\n\n### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/tourist/touristReadProfile/66fed9394ea73680bc716187`\n    \n\n### Response\n\nThe response will contain the profile details of the tourist, including their name, contact information, and other relevant information."
			},
			"response": []
		},
		{
			"name": "Update Tourist Profile",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"mobile\": \"+201017107503\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/touristUpdateProfile/66fed9394ea73680bc716187",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"touristUpdateProfile",
						"66fed9394ea73680bc716187"
					]
				},
				"description": "### Update Tourist Profile\n\nThis endpoint is used to update the profile of a tourist.\n\n#### Request Body\n\n- mobile (string, required): The updated mobile number of the tourist.\n    \n\n#### Response\n\nThe response for this request will be a JSON object with the updated tourist profile information.\n\n``` json\n{\n    \"touristId\": \"string\",\n    \"name\": \"string\",\n    \"email\": \"string\",\n    \"mobile\": \"string\",\n    \"country\": \"string\",\n    \"profileImage\": \"string\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete Specific  Tourists",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"touristIds\": [\"66fed9394ea73680bc716187\"] \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/deleteSomeTourists",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"deleteSomeTourists"
					]
				},
				"description": "This endpoint is used to delete specific tourists identified by their IDs.\n\n### Request\n\nThe HTTP DELETE request should be sent to `http://localhost:5000/tourist/deleteSomeTourists`.\n\n#### Request Body\n\n- Type: JSON\n    \n- Description: The request body should contain an array of tourist IDs to be deleted.\n    \n    - `touristIds`: An array of strings representing the IDs of the tourists to be deleted.\n        \n\nExample:\n\n``` json\n{\n    \"touristIds\": [\"66fed9394ea73680bc716187\"]\n}\n\n ```\n\n### Response\n\nThe response of this request is a JSON schema representing the structure of the response data."
			},
			"response": []
		},
		{
			"name": "Search General",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"searchString\": \"Scuba\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/searchGeneral/searchGeneral",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"searchGeneral",
						"searchGeneral"
					]
				},
				"description": "### GET /tourist/searchGeneral/searchGeneral\n\nThis endpoint retrieves general information related to tourist search based on the provided search string.\n\n#### Request\n\nThe request should be sent as an HTTP GET to the specified URL with the following query parameter:\n\n- `searchString` (string, required): The search string to filter tourist information.\n    \n\nExample:\n\n```\nGET http://localhost:5000/tourist/searchGeneral/searchGeneral?searchString=Scuba\n\n ```\n\n#### Response\n\nThe response will be a JSON object conforming to the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        // Define the properties of the response object here\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Delete Seller From System",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/seller/deletesSellerFromSystem/66fee17ab8d22716bbc87555",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"seller",
						"deletesSellerFromSystem",
						"66fee17ab8d22716bbc87555"
					]
				},
				"description": "### Delete Seller from System\n\nThis endpoint is used to delete a seller from the system.\n\n#### Request Body\n\n- `searchString` (text): The string used to search for the seller to be deleted.\n    \n\n#### Response\n\nThe response will indicate the success or failure of the deletion operation."
			},
			"response": []
		},
		{
			"name": "Delete Advertiser From System",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/advertiser/deleteAdvertiserFromSystem/66f6acf40f0094718a1ee68c",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"deleteAdvertiserFromSystem",
						"66f6acf40f0094718a1ee68c"
					]
				},
				"description": "### Delete Advertiser From System\n\nThis endpoint is used to delete an advertiser from the system.\n\n#### Request\n\n- Method: DELETE\n    \n- URL: `http://localhost:5000/advertiser/deleteAdvertiserFromSystem/66f6acf40f0094718a1ee68c`\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response will contain a `message` property indicating the result of the deletion operation."
			},
			"response": []
		},
		{
			"name": "Delete Tourist From System",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/deleteTouristFromSystem/66f72f100f0094718a60bc4f",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"deleteTouristFromSystem",
						"66f72f100f0094718a60bc4f"
					]
				},
				"description": "This endpoint sends an HTTP DELETE request to delete a tourist from the system. The request body should include a JSON payload with the key \"searchString\" to specify the search criteria for the tourist to be deleted.\n\nThe response to this request will depend on the success or failure of the deletion operation, and will provide relevant status codes and messages."
			},
			"response": []
		},
		{
			"name": "Delete Guide From System",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/guide/deleteGuideFromSystem/66fedddc1e30eb6ff7fe83a9",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"guide",
						"deleteGuideFromSystem",
						"66fedddc1e30eb6ff7fe83a9"
					]
				},
				"description": "### DELETE /guide/deleteGuideFromSystem/{guideId}\n\nThis endpoint is used to delete a specific guide from the system.\n\n#### Request\n\n- Path Parameters\n    \n    - `guideId` (string, required): The unique identifier of the guide to be deleted from the system.\n        \n\n#### Response\n\nThe response for this request is a JSON schema that represents the structure of the response body. The actual response data will conform to this schema, and will include the relevant properties based on the success or failure of the delete operation."
			},
			"response": []
		},
		{
			"name": "Delete Governor From System",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/governor/deleteGovernorFromSystem/66fef7634d947a9f0967535c",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"governor",
						"deleteGovernorFromSystem",
						"66fef7634d947a9f0967535c"
					]
				},
				"description": "### Delete Governor from System\n\nThis endpoint sends an HTTP DELETE request to delete a governor from the system.\n\n#### Request Body\n\nThis request does not require a request body.\n\n#### Response\n\nThe response will indicate the success or failure of the deletion operation."
			},
			"response": []
		},
		{
			"name": "Advertiser Read Profile",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/advertiser/advertiserReadProfile/66f6acf40f0094718a1ee68d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"advertiser",
						"advertiserReadProfile",
						"66f6acf40f0094718a1ee68d"
					]
				},
				"description": "### GET /advertiser/advertiserReadProfile/{profileId}\n\nThis endpoint retrieves the profile of a specific advertiser identified by the `profileId` parameter.\n\n#### Request\n\n- Path Parameters\n    \n    - `profileId`: The unique identifier of the advertiser's profile.\n        \n\n#### Response\n\nThe response for this request is a JSON object representing the advertiser's profile. The schema for the JSON response can be documented as follows:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"advertiserId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"email\": {\n      \"type\": \"string\"\n    },\n    \"phone\": {\n      \"type\": \"string\"\n    },\n    \"address\": {\n      \"type\": \"string\"\n    },\n    \"createdAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"updatedAt\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "View My Products",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/product/viewMyProducts/6702b737bc1f3e9c8fc16976",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"product",
						"viewMyProducts",
						"6702b737bc1f3e9c8fc16976"
					]
				},
				"description": "### Retrieve User's Products\n\nThis endpoint retrieves the products associated with the specified user.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/product/viewMyProducts/6702b737bc1f3e9c8fc16976`\n    \n\n#### Response\n\nThe response for this request is a JSON object representing the user's products. The JSON schema for the response is as follows:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"product1\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"product2\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        },\n        \"description\": {\n          \"type\": \"string\"\n        }\n      }\n    },\n    ...\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Venue Upload Photos",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "pictures",
							"type": "file",
							"src": []
						},
						{
							"key": "pictures",
							"type": "file",
							"src": []
						},
						{
							"key": "pictures",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "http://localhost:5000/venue/uploadPhotos/66f6c29e0f0094718a29b7ff",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"venue",
						"uploadPhotos",
						"66f6c29e0f0094718a29b7ff"
					]
				},
				"description": "### Upload Venue Photos\n\nThis endpoint allows the user to upload photos for a specific venue.\n\n#### Request Body\n\n- This request requires a form-data body type.\n    \n\n#### Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"photoUrls\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Itinerary Fetch Options",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/itinerary/fetchOptions/fetchOptions",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"fetchOptions",
						"fetchOptions"
					]
				},
				"description": "This endpoint retrieves the options for fetching itinerary details. Upon a successful GET request to `http://localhost:5000/itinerary/fetchOptions/fetchOptions`, the response will be in the form of a JSON schema representing the structure of the response data."
			},
			"response": []
		},
		{
			"name": "Delete Admin From System",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/admin/deleteAdminFromSystem/66fef86b9a64faf23b78d6a5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"admin",
						"deleteAdminFromSystem",
						"66fef86b9a64faf23b78d6a5"
					]
				},
				"description": "### Delete Admin from System\n\nThis endpoint sends an HTTP DELETE request to delete a specific admin from the system.\n\n#### Request Body\n\n- No request body is required for this request.\n    \n\n#### Response\n\nThe response for this request is a JSON schema representing the result of the deletion operation. The schema includes the following properties:\n\n- `status`: (string) The status of the operation, indicating success or failure.\n    \n- `message`: (string) A message providing additional information about the result of the operation.\n    \n\nExample response:\n\n``` json\n{\n  \"status\": \"success\",\n  \"message\": \"Admin successfully deleted from the system.\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Tourist History",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/tourist/history/getHistory/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"history",
						"getHistory",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "This endpoint retrieves the history for a specific tourist identified by their ID. The response for this request is a JSON schema describing the structure of the historical data for the tourist.\n\nThe JSON schema for the response will define the properties and data types of the historical information related to the tourist."
			},
			"response": []
		},
		{
			"name": "Hotel Images",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"hotelName\": \"Intercontinental city stars\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/hotels/getImages",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"hotels",
						"getImages"
					]
				},
				"description": "### GET /tourist/hotels/getImages\n\nThis endpoint retrieves images for a specific hotel.\n\n#### Request\n\nThe request should include the following parameter in the request body:\n\n- `hotelName` (string, required): The name of the hotel for which images are to be retrieved.\n    \n\nExample:\n\n``` json\n{\n    \"hotelName\": \"Intercontinental city stars\"\n}\n\n ```\n\n#### Response\n\nThe response will be a JSON object with the following schema:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"images\": {\n            \"type\": \"array\",\n            \"items\": {\n                \"type\": \"string\"\n            }\n        }\n    }\n}\n\n ```\n\nThe `images` property in the response contains an array of image URLs for the specified hotel."
			},
			"response": []
		},
		{
			"name": "Search Transportation",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"IATA\": \"JFK\",\r\n    \"startDateTime\": \"2024-12-12T00:00:00\",\r\n    \"transferType\": \"PRIVATE\",\r\n    \"endGeoCode\": { \"latitude\": 40.748189, \"longitude\": -73.985965 },\r\n    \"passengers\": 1\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/transportation/searchTransportation",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"transportation",
						"searchTransportation"
					]
				},
				"description": "# Search Transportation\n\nThis endpoint retrieves transportation options for tourists based on the specified criteria.\n\n## Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/tourist/transportation/searchTransportation`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n\n### Query Parameters\n\n- `IATA`: The IATA code for the airport.\n    \n- `startDateTime`: The date and time for the start of the transportation.\n    \n- `transferType`: The type of transportation transfer.\n    \n- `endGeoCode`: The geographical coordinates for the destination.\n    \n    - `latitude`: The latitude of the destination.\n        \n    - `longitude`: The longitude of the destination.\n        \n- `passengers`: The number of passengers.\n    \n\n## Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    // Define the properties based on the actual response\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Book Activity",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"useWallet\": \"true\",\r\n    \"total\": 100\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/66f6afa80f0094718a203f1d/activity/66f6ac560f0094718a1e9e73/book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"66f6afa80f0094718a203f1d",
						"activity",
						"66f6ac560f0094718a1e9e73",
						"book"
					]
				},
				"description": "### POST /tourist/66f6afa80f0094718a203f1d/activity/66f6ac560f0094718a1e9e73/book\n\nThis endpoint is used to book an activity for a specific tourist.\n\n#### Request Body\n\n- useWallet (boolean, required): Indicates whether the user wants to use the wallet for payment.\n    \n- total (number, required): The total amount for the booking.\n    \n\n#### Response\n\nThe response for this request will be a JSON object conforming to the following schema:\n\n``` json\n{\n    \"bookingId\": \"string\",\n    \"activityId\": \"string\",\n    \"touristId\": \"string\",\n    \"totalAmount\": \"number\",\n    \"paymentStatus\": \"string\"\n}\n\n ```\n\nThe response will include the booking ID, activity ID, tourist ID, total amount, and payment status for the booking."
			},
			"response": []
		},
		{
			"name": "Book Itinerary",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"useWallet\": \"true\",\r\n    \"total\": 100,\r\n    \"date\": \"2025-10-02T09:00:00Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/66f6afa80f0094718a203f1d/itinerary/66f6adef0f0094718a1f6050/book",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"66f6afa80f0094718a203f1d",
						"itinerary",
						"66f6adef0f0094718a1f6050",
						"book"
					]
				},
				"description": "### POST /tourist/66f6afa80f0094718a203f1d/itinerary/66f6adef0f0094718a1f6050/book\n\nThis endpoint is used to book an itinerary for a specific tourist.\n\n#### Request Body\n\n- useWallet (boolean, required): A flag indicating whether the wallet should be used for payment.\n    \n- total (number, required): The total amount for the booking.\n    \n- date (string, required): The date and time for the booking in ISO 8601 format.\n    \n\nExample:\n\n``` json\n{\n    \"useWallet\": true,\n    \"total\": 100,\n    \"date\": \"2025-10-02T09:00:00Z\"\n}\n\n ```\n\n#### Response\n\nThe response for this request will be a JSON schema describing the structure of the response object."
			},
			"response": []
		},
		{
			"name": "Book Transportation",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transferType\": \"PRIVATE\",\r\n    \"start_dateTime\": \"2024-12-12T00:00:00\",\r\n    \"start_locationCode\": \"CAI\", \r\n    \"end_dateTime\":\"2024-12-13T00:00:00\", \r\n    \"end_address_line\":\"9 North Teseen\", \r\n    \"end_address_cityName\": \"Cairo\", \r\n    \"vehicle_code\": \"soo\", \r\n    \"vehicle_description\": \"very nice car mercedes omg\", \r\n    \"vehicle_seats\": 3, \r\n    \"quotation_monetaryAmount\": 10000, \r\n    \"quotation_currencyCode\": \"USD\", \r\n    \"distance_value\": 10, \r\n    \"distance_unit\": \"KM\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/transportation/bookTransportation/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"transportation",
						"bookTransportation",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### Book Transportation\n\nThis endpoint allows the user to book transportation for a tourist.\n\n#### Request Body\n\n- transferType (string, required): Specifies the type of transfer, e.g. PRIVATE.\n    \n- start_dateTime (string, required): The start date and time of the transportation.\n    \n- start_locationCode (string, required): The code for the start location.\n    \n- end_dateTime (string, required): The end date and time of the transportation.\n    \n- end_address_line (string, required): The address line of the end location.\n    \n- end_address_cityName (string, required): The city name of the end location.\n    \n- vehicle_code (string, required): The code of the vehicle.\n    \n- vehicle_description (string, required): Description of the vehicle.\n    \n- vehicle_seats (number, required): The number of seats in the vehicle.\n    \n- quotation_monetaryAmount (number, required): The quotation amount for the transportation.\n    \n- quotation_currencyCode (string, required): The currency code for the quotation amount.\n    \n- distance_value (number, required): The distance value for the transportation.\n    \n- distance_unit (string, required): The unit of distance, e.g. KM.\n    \n\n#### Response\n\nThe response for this request will be a JSON schema representing the booked transportation details."
			},
			"response": []
		},
		{
			"name": "Future Bookings",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/tourist/future/getFutureBookings/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"future",
						"getFutureBookings",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### Get Future Bookings\n\nThis endpoint makes an HTTP GET request to retrieve future bookings for a specific tourist.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/tourist/future/getFutureBookings/66f6afa80f0094718a203f1d`\n    \n\n#### Response\n\nThe response for this request is a JSON object representing the future bookings for the specified tourist. You can refer to the following JSON schema for the structure of the response:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"bookingId\": {\n      \"type\": \"string\"\n    },\n    \"tourName\": {\n      \"type\": \"string\"\n    },\n    \"tourDate\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"tourLocation\": {\n      \"type\": \"string\"\n    },\n    \"tourGuide\": {\n      \"type\": \"string\"\n    }\n    // ... (other properties)\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Itinerary not hidden or Has Bookings",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/itinerary//nothidden/orHasBookings/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"",
						"nothidden",
						"orHasBookings",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "This endpoint retrieves itinerary details for a specific itinerary ID. The request should be made using an HTTP GET method to the specified URL.\n\n### Request\n\nThe request does not include a request body. The URL should include the itinerary ID as a path parameter.\n\n- Path parameter:\n    \n    - itineraryID: The unique identifier for the itinerary.\n        \n\n### Response\n\nThe response will include the itinerary details for the provided itinerary ID, including information about whether it is hidden or has bookings. The response body will contain the relevant itinerary data."
			},
			"response": []
		},
		{
			"name": "Activity not hidden or Has Bookings",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/activity//nothidden/orHasBookings/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"activity",
						"",
						"nothidden",
						"orHasBookings",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### Get Activity Details\n\nThis endpoint retrieves the details of a specific activity identified by the provided ID.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/activity//nothidden/orHasBookings/66f6afa80f0094718a203f1d`\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"activityId\": {\n      \"type\": \"string\"\n    },\n    \"name\": {\n      \"type\": \"string\"\n    },\n    \"description\": {\n      \"type\": \"string\"\n    },\n    \"location\": {\n      \"type\": \"string\"\n    },\n    \"date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\"\n    },\n    \"duration\": {\n      \"type\": \"number\"\n    },\n    \"participants\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Add Itinerary Bookmark",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transferType\": \"PRIVATE\",\r\n    \"start_dateTime\": \"2024-12-12T00:00:00\",\r\n    \"start_locationCode\": \"CAI\", \r\n    \"end_dateTime\":\"2024-12-13T00:00:00\", \r\n    \"end_address_line\":\"9 North Teseen\", \r\n    \"end_address_cityName\": \"Cairo\", \r\n    \"vehicle_code\": \"soo\", \r\n    \"vehicle_description\": \"very nice car mercedes omg\", \r\n    \"vehicle_seats\": 3, \r\n    \"quotation_monetaryAmount\": 10000, \r\n    \"quotation_currencyCode\": \"USD\", \r\n    \"distance_value\": 10, \r\n    \"distance_unit\": \"KM\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/bookmark/addItineraryBookmark/66f6afa80f0094718a203f1d/672fd2a3d9fb16cda086a5b6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"bookmark",
						"addItineraryBookmark",
						"66f6afa80f0094718a203f1d",
						"672fd2a3d9fb16cda086a5b6"
					]
				},
				"description": "### Add Itinerary Bookmark\n\nThis endpoint allows the user to add a bookmark for a specific itinerary.\n\n#### Request Body Parameters\n\n- `transferType` (string): The type of transfer.\n    \n- `start_dateTime` (string): The start date and time of the itinerary.\n    \n- `start_locationCode` (string): The location code for the start of the itinerary.\n    \n- `end_dateTime` (string): The end date and time of the itinerary.\n    \n- `end_address_line` (string): The address line for the end location of the itinerary.\n    \n- `end_address_cityName` (string): The city name for the end location of the itinerary.\n    \n- `vehicle_code` (string): The code for the vehicle.\n    \n- `vehicle_description` (string): The description of the vehicle.\n    \n- `vehicle_seats` (number): The number of seats in the vehicle.\n    \n- `quotation_monetaryAmount` (number): The monetary amount for the quotation.\n    \n- `quotation_currencyCode` (string): The currency code for the quotation.\n    \n- `distance_value` (number): The distance value for the itinerary.\n    \n- `distance_unit` (string): The unit of distance for the itinerary.\n    \n\n#### Response\n\nThe response will contain the status of the bookmark addition."
			},
			"response": []
		},
		{
			"name": "Add Activity Bookmark",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"transferType\": \"PRIVATE\",\r\n    \"start_dateTime\": \"2024-12-12T00:00:00\",\r\n    \"start_locationCode\": \"CAI\", \r\n    \"end_dateTime\":\"2024-12-13T00:00:00\", \r\n    \"end_address_line\":\"9 North Teseen\", \r\n    \"end_address_cityName\": \"Cairo\", \r\n    \"vehicle_code\": \"soo\", \r\n    \"vehicle_description\": \"very nice car mercedes omg\", \r\n    \"vehicle_seats\": 3, \r\n    \"quotation_monetaryAmount\": 10000, \r\n    \"quotation_currencyCode\": \"USD\", \r\n    \"distance_value\": 10, \r\n    \"distance_unit\": \"KM\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/bookmark/addActivityBookmark/66f6afa80f0094718a203f1d/66f6ac560f0094718a1e9e76",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"bookmark",
						"addActivityBookmark",
						"66f6afa80f0094718a203f1d",
						"66f6ac560f0094718a1e9e76"
					]
				},
				"description": "The HTTP POST request allows tourists to add an activity bookmark. The request is made to [http://localhost:5000/tourist/bookmark/addActivityBookmark/66f6afa80f0094718a203f1d/66f6ac560f0094718a1e9e76](http://localhost:5000/tourist/bookmark/addActivityBookmark/66f6afa80f0094718a203f1d/66f6ac560f0094718a1e9e76).\n\n### Request Body\n\n- transferType: (string) The type of transfer for the activity.\n    \n- start_dateTime: (string) The start date and time for the activity.\n    \n- start_locationCode: (string) The code for the starting location of the activity.\n    \n- end_dateTime: (string) The end date and time for the activity.\n    \n- end_address_line: (string) The address line for the end location of the activity.\n    \n- end_address_cityName: (string) The city name for the end location of the activity.\n    \n- vehicle_code: (string) The code for the vehicle used for the transfer.\n    \n- vehicle_description: (string) Description of the vehicle used for the transfer.\n    \n- vehicle_seats: (integer) The number of seats available in the vehicle.\n    \n- quotation_monetaryAmount: (integer) The quotation amount for the transfer.\n    \n- quotation_currencyCode: (string) The currency code for the quotation amount.\n    \n- distance_value: (integer) The distance value for the transfer.\n    \n- distance_unit: (string) The unit of distance for the transfer.\n    \n\n### Headers\n\n- No specific headers mentioned."
			},
			"response": []
		},
		{
			"name": "Tourist Saved Events",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/tourist/getSavedEvents/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"getSavedEvents",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### Get Saved Events\n\nThis endpoint retrieves the saved events for a specific tourist.\n\n#### Request\n\n- Method: GET\n    \n- URL: `http://localhost:5000/tourist/getSavedEvents/66f6afa80f0094718a203f1d`\n    \n\n#### Response\n\nThe response for this request is a JSON object with the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"events\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"eventId\": {\n            \"type\": \"string\"\n          },\n          \"eventName\": {\n            \"type\": \"string\"\n          },\n          \"eventDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Update Itinerary Filtered Fields",
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"active\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/itinerary/updateItineraryFilteredFields/672e13c9db58417ad05073d9/672fd2a3d9fb16cda086a5b6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"itinerary",
						"updateItineraryFilteredFields",
						"672e13c9db58417ad05073d9",
						"672fd2a3d9fb16cda086a5b6"
					]
				},
				"description": "### Update Itinerary Filtered Fields\n\nThis endpoint is used to update specific fields of an itinerary.\n\n#### Request\n\n- Method: PATCH\n    \n- URL: `http://localhost:5000/itinerary/updateItineraryFilteredFields/672e13c9db58417ad05073d9/672fd2a3d9fb16cda086a5b6`\n    \n- Headers:\n    \n    - Content-Type: application/json\n        \n- { \"active\": true}\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Update Activity Filtered Fields",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"isOpen\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/activity/updateActivityFilteredFields/66f6acf40f0094718a1ee68e/6703c2c80ece860fb3c89620",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"activity",
						"updateActivityFilteredFields",
						"66f6acf40f0094718a1ee68e",
						"6703c2c80ece860fb3c89620"
					]
				},
				"description": "This endpoint makes an HTTP PUT request to update specific fields of an activity. The request is sent to [http://localhost:5000/activity/updateActivityFilteredFields/66f6acf40f0094718a1ee68e/6703c2c80ece860fb3c89620](http://localhost:5000/activity/updateActivityFilteredFields/66f6acf40f0094718a1ee68e/6703c2c80ece860fb3c89620). The request body should be in raw JSON format and should include the \"isOpen\" field with a boolean value to indicate whether the activity is open or not.\n\n### Response\n\nThe response of this request is a JSON schema representing the updated activity with the modified fields."
			},
			"response": []
		},
		{
			"name": "Remove product from tourist's cart",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productId\": \"6702a9f2a9f5ed2961e71d83\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/cart/remove/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"cart",
						"remove",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "The POST request is used to remove a product from the tourist's cart. The request should be sent to [http://localhost:5000/tourist/cart/remove/66f6afa80f0094718a203f1d](http://localhost:5000/tourist/cart/remove/66f6afa80f0094718a203f1d) with the following payload in the raw request body type:\n\n``` json\n{\n    \"productId\": \"6702a9f2a9f5ed2961e71d83\"\n}\n\n ```\n\nThe response will contain the result of the removal operation."
			},
			"response": []
		},
		{
			"name": "Add product to cart for tourist",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productId\": \"6702a9f2a9f5ed2961e71d83\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/cart/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"cart",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "# POST /tourist/cart/66f6afa80f0094718a203f1d\n\nThis endpoint is used to add a product to the cart for a specific tourist.\n\n## Request Body\n\n- productId (string, required): The ID of the product to be added to the cart.\n    \n\n## Response\n\nThe response for this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    },\n    \"data\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"cartId\": {\n          \"type\": \"string\"\n        },\n        \"productId\": {\n          \"type\": \"string\"\n        },\n        \"quantity\": {\n          \"type\": \"number\"\n        }\n      }\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Add Tourist Address",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"country\": \"Egypt\",\r\n    \"city\": \"Alex\", \r\n    \"area\": \"Nasr City\", \r\n    \"street\": \"Home\", \r\n    \"house\": \"12\", \r\n    \"app\": \"9\", \r\n    \"desc\": \"www\"  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/address/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"address",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### POST /tourist/address/66f6afa80f0094718a203f1d\n\nThis endpoint is used to update the address details for a tourist.\n\n#### Request Body\n\n- country (string, required): The country of the address.\n    \n- city (string, required): The city of the address.\n    \n- area (string, required): The area of the address.\n    \n- street (string, required): The street of the address.\n    \n- house (string, required): The house number of the address.\n    \n- app (string, required): The apartment number of the address.\n    \n- desc (string, required): Description of the address.\n    \n\n#### Response\n\nThe response for this request will be in JSON format with the following schema:\n\n``` json\n{\n  \"status\": \"string\",\n  \"message\": \"string\"\n}\n\n ```\n\n- status (string): The status of the response.\n    \n- message (string): A message indicating the result of the request."
			},
			"response": []
		},
		{
			"name": "Cart Increment",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"productId\": \"66f6ae2a0f0094718a1f7d84\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/cart/plus/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"cart",
						"plus",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### Add Product to Cart\n\nThis endpoint allows the addition of a product to the tourist's cart.\n\n#### Request Body\n\n- `productId` (string): The ID of the product to be added to the cart.\n    \n\n#### Response\n\nThe response schema for this request is as follows:\n\n``` json\n{\n    \"cartId\": \"string\",\n    \"totalItems\": \"number\",\n    \"totalPrice\": \"number\"\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Retrieve Cart Details",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/tourist/cart/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"cart",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "This endpoint retrieves the cart details for a specific tourist identified by the provided ID.\n\n### Response\n\nThe response for this request is a JSON object representing the cart details for the tourist. You can refer to the JSON schema below for the structure of the response.\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"cartId\": {\n      \"type\": \"string\"\n    },\n    \"items\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"itemId\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"quantity\": {\n            \"type\": \"integer\"\n          },\n          \"price\": {\n            \"type\": \"number\"\n          }\n        }\n      }\n    },\n    \"totalPrice\": {\n      \"type\": \"number\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Tourist Order",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2023-11-11T00:00:00.000Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/orders/order/date/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"orders",
						"order",
						"date",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "This endpoint retrieves the details of a specific tourist order based on the provided date. The date is passed as a parameter in the URL. The response will be in JSON format and can be documented as a JSON schema."
			},
			"response": []
		},
		{
			"name": "Cancel Tourist Order",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"date\": \"2023-11-11T00:00:00.000Z\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/orders/cancel/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"orders",
						"cancel",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "The endpoint `POST http://localhost:5000/tourist/orders/cancel/66f6afa80f0094718a203f1d` is used to cancel a specific tourist order.\n\n### Request Body\n\n- The request body should be in raw JSON format and should include the `date` parameter with the date and time in ISO 8601 format (`YYYY-MM-DDTHH:MM:SS.SSSZ`).\n    \n\n### Response\n\nThe response of this request follows the JSON schema below:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"status\": {\n      \"type\": \"string\"\n    },\n    \"message\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```\n\nThe response will include the `status` and `message` properties, both of type string."
			},
			"response": []
		},
		{
			"name": "Checkout",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"deliveryAddress\": 2,\r\n    \"cod\": false,\r\n    \"useWallet\": true\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/tourist/cart/checkout/66f6afa80f0094718a203f1d",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"tourist",
						"cart",
						"checkout",
						"66f6afa80f0094718a203f1d"
					]
				},
				"description": "### POST /tourist/cart/checkout/66f6afa80f0094718a203f1d\n\nThis endpoint is used to initiate the checkout process for the items in the tourist's cart.\n\n#### Request Body\n\n- `deliveryAddress` (integer) - The ID of the delivery address to be used for shipping the items.\n    \n- `cod` (boolean) - Indicates whether cash on delivery is selected as the payment method.\n    \n- `useWallet` (boolean) - Indicates whether the user wants to use the wallet for payment.\n    \n\n#### Response\n\nThe response for this request is a JSON object conforming to the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"orderId\": {\n      \"type\": \"string\"\n    },\n    \"totalAmount\": {\n      \"type\": \"number\"\n    },\n    \"paymentMethod\": {\n      \"type\": \"string\"\n    },\n    \"transactionStatus\": {\n      \"type\": \"string\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Check Valid Promocode",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"touristIds\": \"60d5ec49c6d2e22a7c78874a\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:5000/promocode/checkValid/BIRTHDAY2024",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"promocode",
						"checkValid",
						"BIRTHDAY2024"
					]
				},
				"description": "### Check Valid Promo Code\n\nThis endpoint is used to check the validity of a promo code for a specific tourist.\n\n#### Request Body\n\n- `touristIds` (string): The ID of the tourist for whom the promo code validity needs to be checked.\n    \n\n#### Response\n\nThe response for this request will be in JSON format and will include the following schema:\n\n``` json\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"valid\": {\n      \"type\": \"boolean\",\n      \"description\": \"Indicates whether the promo code is valid for the specified tourist\"\n    },\n    \"message\": {\n      \"type\": \"string\",\n      \"description\": \"A message providing additional information about the validity of the promo code\"\n    }\n  }\n}\n\n ```"
			},
			"response": []
		}
	]
}